INFO  17:33:51,801 - Kompajliranje fajla: D:\Faks\PP1\workspace\MJCompiler\test\test303.mj
INFO  17:33:51,802 - ===================================
INFO  17:33:51,802 - Leksicka analiza
INFO  17:33:51,809 - ===================================
INFO  17:33:51,810 - Sintaksna analiza
INFO  17:33:51,857 - #2 program
INFO  17:33:51,857 - #51 test_303
INFO  17:33:51,857 - #7 const
INFO  17:33:51,858 - #51 int
INFO  17:33:51,858 - #51 cinilac
INFO  17:33:51,859 - #36 =
INFO  17:33:51,859 - #50 4
INFO  17:33:51,859 - #41 ,
INFO  17:33:51,860 - #51 delilac
INFO  17:33:51,860 - #36 =
INFO  17:33:51,860 - #50 3
INFO  17:33:51,860 - #39 ;
INFO  17:33:51,860 - #4 class
INFO  17:33:51,861 - #51 Predmet
INFO  17:33:51,861 - #47 {
INFO  17:33:51,864 - #51 int
INFO  17:33:51,865 - #51 tezina
INFO  17:33:51,865 - #39 ;
INFO  17:33:51,866 - #51 int
INFO  17:33:51,866 - #51 koefTezine
INFO  17:33:51,866 - #39 ;
INFO  17:33:51,866 - #51 char
INFO  17:33:51,866 - #51 vrsta
INFO  17:33:51,866 - #39 ;
INFO  17:33:51,867 - #47 {
INFO  17:33:51,867 - #51 Predmet
INFO  17:33:51,867 - #43 (
INFO  17:33:51,868 - #44 )
INFO  17:33:51,868 - #47 {
INFO  17:33:51,868 - #51 koefTezine
INFO  17:33:51,869 - #36 =
INFO  17:33:51,869 - #50 1
INFO  17:33:51,869 - #39 ;
INFO  17:33:51,870 - #48 }
INFO  17:33:51,870 - #15 void
INFO  17:33:51,871 - #51 postaviTezinu
INFO  17:33:51,872 - #43 (
INFO  17:33:51,872 - #51 int
INFO  17:33:51,872 - #51 tezina
INFO  17:33:51,872 - #44 )
INFO  17:33:51,873 - #47 {
INFO  17:33:51,874 - #18 this
INFO  17:33:51,874 - #42 .
INFO  17:33:51,874 - #51 tezina
INFO  17:33:51,874 - #36 =
INFO  17:33:51,875 - #51 tezina
INFO  17:33:51,875 - #25 *
INFO  17:33:51,875 - #51 koefTezine
INFO  17:33:51,876 - #39 ;
INFO  17:33:51,876 - #48 }
INFO  17:33:51,876 - #15 void
INFO  17:33:51,877 - #51 ucitajTezinu
INFO  17:33:51,877 - #43 (
INFO  17:33:51,877 - #44 )
INFO  17:33:51,878 - #47 {
INFO  17:33:51,878 - #13 read
INFO  17:33:51,878 - #43 (
INFO  17:33:51,878 - #51 tezina
INFO  17:33:51,878 - #44 )
INFO  17:33:51,878 - #39 ;
INFO  17:33:51,878 - #48 }
INFO  17:33:51,878 - #51 int
INFO  17:33:51,878 - #51 zapremina
INFO  17:33:51,879 - #43 (
INFO  17:33:51,879 - #44 )
INFO  17:33:51,879 - #47 {
INFO  17:33:51,879 - #14 return
INFO  17:33:51,880 - #50 0
INFO  17:33:51,880 - #39 ;
INFO  17:33:51,880 - #48 }
INFO  17:33:51,880 - #51 int
INFO  17:33:51,880 - #51 Q
INFO  17:33:51,880 - #43 (
INFO  17:33:51,880 - #44 )
INFO  17:33:51,881 - #47 {
INFO  17:33:51,881 - #14 return
INFO  17:33:51,881 - #51 zapremina
INFO  17:33:51,881 - #43 (
INFO  17:33:51,881 - #44 )
INFO  17:33:51,881 - #25 *
INFO  17:33:51,882 - #51 tezina
INFO  17:33:51,882 - #39 ;
INFO  17:33:51,882 - #48 }
INFO  17:33:51,882 - #15 void
INFO  17:33:51,882 - #51 postaviVrstu
INFO  17:33:51,882 - #43 (
INFO  17:33:51,882 - #51 char
INFO  17:33:51,882 - #51 vrsta
INFO  17:33:51,882 - #44 )
INFO  17:33:51,882 - #47 {
INFO  17:33:51,882 - #18 this
INFO  17:33:51,883 - #42 .
INFO  17:33:51,883 - #51 vrsta
INFO  17:33:51,883 - #36 =
INFO  17:33:51,883 - #51 vrsta
INFO  17:33:51,883 - #39 ;
INFO  17:33:51,883 - #48 }
INFO  17:33:51,883 - #51 char
INFO  17:33:51,883 - #51 dohvVrstu
INFO  17:33:51,883 - #43 (
INFO  17:33:51,883 - #44 )
INFO  17:33:51,883 - #47 {
INFO  17:33:51,883 - #14 return
INFO  17:33:51,883 - #51 vrsta
INFO  17:33:51,883 - #39 ;
INFO  17:33:51,883 - #48 }
INFO  17:33:51,883 - #51 int
INFO  17:33:51,883 - #51 dohvTezinu
INFO  17:33:51,883 - #43 (
INFO  17:33:51,883 - #44 )
INFO  17:33:51,883 - #47 {
INFO  17:33:51,883 - #14 return
INFO  17:33:51,883 - #51 tezina
INFO  17:33:51,884 - #39 ;
INFO  17:33:51,884 - #48 }
INFO  17:33:51,884 - #15 void
INFO  17:33:51,884 - #51 ispisi
INFO  17:33:51,884 - #43 (
INFO  17:33:51,884 - #44 )
INFO  17:33:51,884 - #47 {
INFO  17:33:51,884 - #12 print
INFO  17:33:51,884 - #43 (
INFO  17:33:51,884 - #51 vrsta
INFO  17:33:51,884 - #44 )
INFO  17:33:51,884 - #39 ;
INFO  17:33:51,889 - #12 print
INFO  17:33:51,889 - #43 (
INFO  17:33:51,889 - #51 Q
INFO  17:33:51,889 - #43 (
INFO  17:33:51,889 - #44 )
INFO  17:33:51,889 - #44 )
INFO  17:33:51,889 - #39 ;
INFO  17:33:51,889 - #48 }
INFO  17:33:51,889 - #48 }
INFO  17:33:51,889 - #48 }
INFO  17:33:51,890 - #4 class
INFO  17:33:51,891 - #51 Sfera
INFO  17:33:51,891 - #16 extends
INFO  17:33:51,891 - #51 Predmet
INFO  17:33:51,891 - #47 {
INFO  17:33:51,891 - #51 int
INFO  17:33:51,891 - #51 r
INFO  17:33:51,891 - #39 ;
INFO  17:33:51,891 - #47 {
INFO  17:33:51,891 - #51 Sfera
INFO  17:33:51,891 - #43 (
INFO  17:33:51,891 - #44 )
INFO  17:33:51,891 - #47 {
INFO  17:33:51,891 - #19 super
INFO  17:33:51,891 - #43 (
INFO  17:33:51,891 - #44 )
INFO  17:33:51,892 - #39 ;
INFO  17:33:51,892 - #51 vrsta
INFO  17:33:51,892 - #36 =
INFO  17:33:51,892 - #49 s
INFO  17:33:51,892 - #39 ;
INFO  17:33:51,892 - #48 }
INFO  17:33:51,892 - #15 void
INFO  17:33:51,892 - #51 postaviPoluprecnik
INFO  17:33:51,893 - #43 (
INFO  17:33:51,893 - #51 int
INFO  17:33:51,893 - #51 r
INFO  17:33:51,893 - #44 )
INFO  17:33:51,893 - #47 {
INFO  17:33:51,893 - #18 this
INFO  17:33:51,893 - #42 .
INFO  17:33:51,893 - #51 r
INFO  17:33:51,893 - #36 =
INFO  17:33:51,893 - #51 r
INFO  17:33:51,893 - #39 ;
INFO  17:33:51,893 - #48 }
INFO  17:33:51,893 - #51 int
INFO  17:33:51,893 - #51 zapremina
INFO  17:33:51,893 - #43 (
INFO  17:33:51,893 - #44 )
INFO  17:33:51,893 - #51 int
INFO  17:33:51,893 - #51 z
INFO  17:33:51,894 - #39 ;
INFO  17:33:51,894 - #47 {
INFO  17:33:51,895 - #51 z
INFO  17:33:51,895 - #36 =
INFO  17:33:51,895 - #51 cinilac
INFO  17:33:51,895 - #39 ;
INFO  17:33:51,895 - #14 return
INFO  17:33:51,895 - #51 z
INFO  17:33:51,895 - #25 *
INFO  17:33:51,895 - #43 (
INFO  17:33:51,895 - #51 r
INFO  17:33:51,896 - #26 /
INFO  17:33:51,896 - #51 delilac
INFO  17:33:51,896 - #44 )
INFO  17:33:51,896 - #39 ;
INFO  17:33:51,897 - #48 }
INFO  17:33:51,897 - #15 void
INFO  17:33:51,897 - #51 ispisi
INFO  17:33:51,897 - #43 (
INFO  17:33:51,897 - #44 )
INFO  17:33:51,897 - #47 {
INFO  17:33:51,897 - #19 super
INFO  17:33:51,897 - #43 (
INFO  17:33:51,897 - #44 )
INFO  17:33:51,897 - #39 ;
INFO  17:33:51,897 - #12 print
INFO  17:33:51,897 - #43 (
INFO  17:33:51,897 - #51 r
INFO  17:33:51,897 - #44 )
INFO  17:33:51,897 - #39 ;
INFO  17:33:51,897 - #12 print
INFO  17:33:51,897 - #43 (
INFO  17:33:51,897 - #51 eol
INFO  17:33:51,897 - #44 )
INFO  17:33:51,897 - #39 ;
INFO  17:33:51,897 - #48 }
INFO  17:33:51,897 - #48 }
INFO  17:33:51,898 - #48 }
INFO  17:33:51,898 - #4 class
INFO  17:33:51,898 - #51 Kvadar
INFO  17:33:51,898 - #16 extends
INFO  17:33:51,898 - #51 Predmet
INFO  17:33:51,898 - #47 {
INFO  17:33:51,898 - #51 int
INFO  17:33:51,898 - #51 a
INFO  17:33:51,898 - #41 ,
INFO  17:33:51,898 - #51 b
INFO  17:33:51,898 - #41 ,
INFO  17:33:51,898 - #51 c
INFO  17:33:51,898 - #39 ;
INFO  17:33:51,898 - #47 {
INFO  17:33:51,898 - #51 Kvadar
INFO  17:33:51,898 - #43 (
INFO  17:33:51,898 - #44 )
INFO  17:33:51,898 - #47 {
INFO  17:33:51,898 - #19 super
INFO  17:33:51,898 - #43 (
INFO  17:33:51,898 - #44 )
INFO  17:33:51,898 - #39 ;
INFO  17:33:51,898 - #51 vrsta
INFO  17:33:51,898 - #36 =
INFO  17:33:51,899 - #49 k
INFO  17:33:51,899 - #39 ;
INFO  17:33:51,899 - #48 }
INFO  17:33:51,899 - #15 void
INFO  17:33:51,899 - #51 postaviStranice
INFO  17:33:51,899 - #43 (
INFO  17:33:51,899 - #51 int
INFO  17:33:51,899 - #51 a
INFO  17:33:51,899 - #41 ,
INFO  17:33:51,899 - #51 int
INFO  17:33:51,899 - #51 b
INFO  17:33:51,899 - #41 ,
INFO  17:33:51,899 - #51 int
INFO  17:33:51,899 - #51 c
INFO  17:33:51,899 - #44 )
INFO  17:33:51,899 - #47 {
INFO  17:33:51,900 - #18 this
INFO  17:33:51,900 - #42 .
INFO  17:33:51,900 - #51 a
INFO  17:33:51,900 - #36 =
INFO  17:33:51,900 - #51 a
INFO  17:33:51,900 - #39 ;
INFO  17:33:51,900 - #18 this
INFO  17:33:51,900 - #42 .
INFO  17:33:51,900 - #51 b
INFO  17:33:51,900 - #36 =
INFO  17:33:51,900 - #51 b
INFO  17:33:51,900 - #39 ;
INFO  17:33:51,900 - #18 this
INFO  17:33:51,900 - #42 .
INFO  17:33:51,900 - #51 c
INFO  17:33:51,900 - #36 =
INFO  17:33:51,900 - #51 c
INFO  17:33:51,900 - #39 ;
INFO  17:33:51,900 - #48 }
INFO  17:33:51,900 - #51 int
INFO  17:33:51,900 - #51 zapremina
INFO  17:33:51,900 - #43 (
INFO  17:33:51,901 - #44 )
INFO  17:33:51,901 - #51 int
INFO  17:33:51,901 - #51 z
INFO  17:33:51,901 - #39 ;
INFO  17:33:51,901 - #47 {
INFO  17:33:51,901 - #51 z
INFO  17:33:51,901 - #36 =
INFO  17:33:51,901 - #51 a
INFO  17:33:51,901 - #25 *
INFO  17:33:51,901 - #51 b
INFO  17:33:51,901 - #25 *
INFO  17:33:51,901 - #51 c
INFO  17:33:51,901 - #39 ;
INFO  17:33:51,901 - #14 return
INFO  17:33:51,901 - #51 z
INFO  17:33:51,901 - #39 ;
INFO  17:33:51,901 - #48 }
INFO  17:33:51,901 - #15 void
INFO  17:33:51,901 - #51 ispisi
INFO  17:33:51,901 - #43 (
INFO  17:33:51,902 - #44 )
INFO  17:33:51,902 - #47 {
INFO  17:33:51,902 - #19 super
INFO  17:33:51,902 - #43 (
INFO  17:33:51,902 - #44 )
INFO  17:33:51,902 - #39 ;
INFO  17:33:51,902 - #12 print
INFO  17:33:51,902 - #43 (
INFO  17:33:51,902 - #51 a
INFO  17:33:51,902 - #44 )
INFO  17:33:51,902 - #39 ;
INFO  17:33:51,902 - #12 print
INFO  17:33:51,902 - #43 (
INFO  17:33:51,902 - #51 b
INFO  17:33:51,902 - #44 )
INFO  17:33:51,902 - #39 ;
INFO  17:33:51,902 - #12 print
INFO  17:33:51,902 - #43 (
INFO  17:33:51,902 - #51 c
INFO  17:33:51,902 - #44 )
INFO  17:33:51,902 - #39 ;
INFO  17:33:51,902 - #12 print
INFO  17:33:51,902 - #43 (
INFO  17:33:51,903 - #51 eol
INFO  17:33:51,903 - #44 )
INFO  17:33:51,903 - #39 ;
INFO  17:33:51,903 - #48 }
INFO  17:33:51,903 - #48 }
INFO  17:33:51,903 - #48 }
INFO  17:33:51,903 - #51 int
INFO  17:33:51,903 - #51 zapreminaK
INFO  17:33:51,903 - #41 ,
INFO  17:33:51,903 - #51 zapreminaS
INFO  17:33:51,903 - #39 ;
INFO  17:33:51,903 - #51 int
INFO  17:33:51,904 - #51 tezinaK
INFO  17:33:51,904 - #41 ,
INFO  17:33:51,904 - #51 tezinaS
INFO  17:33:51,904 - #39 ;
INFO  17:33:51,904 - #47 {
INFO  17:33:51,904 - #15 void
INFO  17:33:51,904 - #51 ispis
INFO  17:33:51,904 - #43 (
INFO  17:33:51,904 - #51 Predmet
INFO  17:33:51,904 - #51 p
INFO  17:33:51,904 - #44 )
INFO  17:33:51,904 - #47 {
INFO  17:33:51,904 - #51 p
INFO  17:33:51,904 - #42 .
INFO  17:33:51,904 - #51 ispisi
INFO  17:33:51,904 - #43 (
INFO  17:33:51,904 - #44 )
INFO  17:33:51,905 - #39 ;
INFO  17:33:51,905 - #12 print
INFO  17:33:51,905 - #43 (
INFO  17:33:51,905 - #51 eol
INFO  17:33:51,905 - #44 )
INFO  17:33:51,905 - #39 ;
INFO  17:33:51,905 - #12 print
INFO  17:33:51,905 - #43 (
INFO  17:33:51,905 - #51 p
INFO  17:33:51,905 - #42 .
INFO  17:33:51,905 - #51 dohvTezinu
INFO  17:33:51,905 - #43 (
INFO  17:33:51,905 - #44 )
INFO  17:33:51,905 - #44 )
INFO  17:33:51,905 - #39 ;
INFO  17:33:51,905 - #48 }
INFO  17:33:51,905 - #15 void
INFO  17:33:51,906 - #51 main
INFO  17:33:51,906 - #43 (
INFO  17:33:51,906 - #44 )
INFO  17:33:51,906 - #51 Predmet
INFO  17:33:51,906 - #51 predmeti
INFO  17:33:51,906 - #45 [
INFO  17:33:51,906 - #46 ]
INFO  17:33:51,906 - #39 ;
INFO  17:33:51,906 - #51 int
INFO  17:33:51,906 - #51 i
INFO  17:33:51,906 - #39 ;
INFO  17:33:51,906 - #51 Sfera
INFO  17:33:51,906 - #51 s1
INFO  17:33:51,906 - #41 ,
INFO  17:33:51,906 - #51 s2
INFO  17:33:51,906 - #41 ,
INFO  17:33:51,906 - #51 s3
INFO  17:33:51,907 - #39 ;
INFO  17:33:51,907 - #51 Kvadar
INFO  17:33:51,907 - #51 k1
INFO  17:33:51,907 - #41 ,
INFO  17:33:51,907 - #51 k2
INFO  17:33:51,907 - #41 ,
INFO  17:33:51,907 - #51 k3
INFO  17:33:51,907 - #39 ;
INFO  17:33:51,907 - #51 int
INFO  17:33:51,907 - #51 t
INFO  17:33:51,907 - #39 ;
INFO  17:33:51,907 - #47 {
INFO  17:33:51,907 - #51 predmeti
INFO  17:33:51,907 - #36 =
INFO  17:33:51,907 - #11 new
INFO  17:33:51,907 - #51 Predmet
INFO  17:33:51,907 - #45 [
INFO  17:33:51,907 - #50 6
INFO  17:33:51,907 - #46 ]
INFO  17:33:51,907 - #39 ;
INFO  17:33:51,908 - #51 s1
INFO  17:33:51,908 - #36 =
INFO  17:33:51,908 - #11 new
INFO  17:33:51,908 - #51 Sfera
INFO  17:33:51,908 - #39 ;
INFO  17:33:51,908 - #51 s2
INFO  17:33:51,908 - #36 =
INFO  17:33:51,908 - #11 new
INFO  17:33:51,908 - #51 Sfera
INFO  17:33:51,908 - #39 ;
INFO  17:33:51,908 - #51 s3
INFO  17:33:51,908 - #36 =
INFO  17:33:51,908 - #11 new
INFO  17:33:51,908 - #51 Sfera
INFO  17:33:51,908 - #39 ;
INFO  17:33:51,908 - #51 k1
INFO  17:33:51,908 - #36 =
INFO  17:33:51,909 - #11 new
INFO  17:33:51,909 - #51 Kvadar
INFO  17:33:51,909 - #39 ;
INFO  17:33:51,909 - #51 k2
INFO  17:33:51,909 - #36 =
INFO  17:33:51,909 - #11 new
INFO  17:33:51,909 - #51 Kvadar
INFO  17:33:51,909 - #39 ;
INFO  17:33:51,909 - #51 k3
INFO  17:33:51,909 - #36 =
INFO  17:33:51,909 - #11 new
INFO  17:33:51,909 - #51 Kvadar
INFO  17:33:51,909 - #39 ;
INFO  17:33:51,910 - #51 s1
INFO  17:33:51,910 - #42 .
INFO  17:33:51,910 - #51 postaviPoluprecnik
INFO  17:33:51,910 - #43 (
INFO  17:33:51,910 - #50 1
INFO  17:33:51,910 - #44 )
INFO  17:33:51,910 - #39 ;
INFO  17:33:51,910 - #51 s2
INFO  17:33:51,910 - #42 .
INFO  17:33:51,910 - #51 postaviPoluprecnik
INFO  17:33:51,910 - #43 (
INFO  17:33:51,911 - #50 2
INFO  17:33:51,911 - #44 )
INFO  17:33:51,911 - #39 ;
INFO  17:33:51,911 - #51 s3
INFO  17:33:51,911 - #42 .
INFO  17:33:51,911 - #51 postaviPoluprecnik
INFO  17:33:51,911 - #43 (
INFO  17:33:51,911 - #50 3
INFO  17:33:51,911 - #44 )
INFO  17:33:51,911 - #39 ;
INFO  17:33:51,911 - #51 k1
INFO  17:33:51,911 - #42 .
INFO  17:33:51,911 - #51 postaviStranice
INFO  17:33:51,911 - #43 (
INFO  17:33:51,911 - #50 1
INFO  17:33:51,911 - #41 ,
INFO  17:33:51,911 - #50 2
INFO  17:33:51,912 - #41 ,
INFO  17:33:51,912 - #50 3
INFO  17:33:51,912 - #44 )
INFO  17:33:51,912 - #39 ;
INFO  17:33:51,912 - #51 k2
INFO  17:33:51,912 - #42 .
INFO  17:33:51,912 - #51 postaviStranice
INFO  17:33:51,912 - #43 (
INFO  17:33:51,912 - #50 2
INFO  17:33:51,912 - #41 ,
INFO  17:33:51,912 - #50 3
INFO  17:33:51,913 - #41 ,
INFO  17:33:51,913 - #50 4
INFO  17:33:51,913 - #44 )
INFO  17:33:51,913 - #39 ;
INFO  17:33:51,913 - #51 k3
INFO  17:33:51,913 - #42 .
INFO  17:33:51,913 - #51 postaviStranice
INFO  17:33:51,913 - #43 (
INFO  17:33:51,913 - #50 3
INFO  17:33:51,913 - #41 ,
INFO  17:33:51,913 - #50 4
INFO  17:33:51,913 - #41 ,
INFO  17:33:51,913 - #50 5
INFO  17:33:51,913 - #44 )
INFO  17:33:51,913 - #39 ;
INFO  17:33:51,913 - #51 predmeti
INFO  17:33:51,913 - #45 [
INFO  17:33:51,913 - #50 0
INFO  17:33:51,913 - #46 ]
INFO  17:33:51,913 - #36 =
INFO  17:33:51,914 - #51 s1
INFO  17:33:51,914 - #39 ;
INFO  17:33:51,914 - #51 predmeti
INFO  17:33:51,914 - #45 [
INFO  17:33:51,914 - #50 2
INFO  17:33:51,914 - #46 ]
INFO  17:33:51,914 - #36 =
INFO  17:33:51,914 - #51 s2
INFO  17:33:51,914 - #39 ;
INFO  17:33:51,914 - #51 predmeti
INFO  17:33:51,914 - #45 [
INFO  17:33:51,914 - #50 4
INFO  17:33:51,914 - #46 ]
INFO  17:33:51,914 - #36 =
INFO  17:33:51,914 - #51 s3
INFO  17:33:51,914 - #39 ;
INFO  17:33:51,914 - #51 predmeti
INFO  17:33:51,914 - #45 [
INFO  17:33:51,915 - #50 1
INFO  17:33:51,915 - #46 ]
INFO  17:33:51,915 - #36 =
INFO  17:33:51,915 - #51 k1
INFO  17:33:51,915 - #39 ;
INFO  17:33:51,915 - #51 predmeti
INFO  17:33:51,915 - #45 [
INFO  17:33:51,915 - #50 3
INFO  17:33:51,915 - #46 ]
INFO  17:33:51,915 - #36 =
INFO  17:33:51,915 - #51 k2
INFO  17:33:51,915 - #39 ;
INFO  17:33:51,915 - #51 predmeti
INFO  17:33:51,915 - #45 [
INFO  17:33:51,915 - #50 5
INFO  17:33:51,915 - #46 ]
INFO  17:33:51,915 - #36 =
INFO  17:33:51,915 - #51 k3
INFO  17:33:51,915 - #39 ;
INFO  17:33:51,915 - #13 read
INFO  17:33:51,915 - #43 (
INFO  17:33:51,915 - #51 t
INFO  17:33:51,915 - #44 )
INFO  17:33:51,915 - #39 ;
INFO  17:33:51,915 - #51 i
INFO  17:33:51,915 - #36 =
INFO  17:33:51,915 - #50 0
INFO  17:33:51,915 - #39 ;
INFO  17:33:51,916 - #9 do
INFO  17:33:51,916 - #47 {
INFO  17:33:51,916 - #51 predmeti
INFO  17:33:51,916 - #45 [
INFO  17:33:51,916 - #51 i
INFO  17:33:51,916 - #46 ]
INFO  17:33:51,916 - #42 .
INFO  17:33:51,916 - #51 postaviTezinu
INFO  17:33:51,916 - #43 (
INFO  17:33:51,916 - #51 t
INFO  17:33:51,916 - #44 )
INFO  17:33:51,916 - #39 ;
INFO  17:33:51,917 - #8 if
INFO  17:33:51,917 - #43 (
INFO  17:33:51,917 - #51 predmeti
INFO  17:33:51,917 - #45 [
INFO  17:33:51,917 - #51 i
INFO  17:33:51,917 - #46 ]
INFO  17:33:51,917 - #22 instanceof
INFO  17:33:51,917 - #51 Sfera
INFO  17:33:51,917 - #44 )
INFO  17:33:51,918 - #47 {
INFO  17:33:51,918 - #12 print
INFO  17:33:51,918 - #43 (
INFO  17:33:51,918 - #49 s
INFO  17:33:51,918 - #44 )
INFO  17:33:51,918 - #39 ;
INFO  17:33:51,918 - #12 print
INFO  17:33:51,918 - #43 (
INFO  17:33:51,918 - #49 f
INFO  17:33:51,918 - #44 )
INFO  17:33:51,918 - #39 ;
INFO  17:33:51,918 - #12 print
INFO  17:33:51,918 - #43 (
INFO  17:33:51,918 - #49 e
INFO  17:33:51,918 - #44 )
INFO  17:33:51,918 - #39 ;
INFO  17:33:51,918 - #12 print
INFO  17:33:51,918 - #43 (
INFO  17:33:51,918 - #49 r
INFO  17:33:51,918 - #44 )
INFO  17:33:51,918 - #39 ;
INFO  17:33:51,918 - #12 print
INFO  17:33:51,918 - #43 (
INFO  17:33:51,918 - #49 a
INFO  17:33:51,918 - #44 )
INFO  17:33:51,918 - #39 ;
INFO  17:33:51,918 - #12 print
INFO  17:33:51,918 - #43 (
INFO  17:33:51,918 - #51 eol
INFO  17:33:51,918 - #44 )
INFO  17:33:51,918 - #39 ;
INFO  17:33:51,918 - #48 }
INFO  17:33:51,918 - #6 else
INFO  17:33:51,919 - #8 if
INFO  17:33:51,920 - #43 (
INFO  17:33:51,920 - #51 predmeti
INFO  17:33:51,920 - #45 [
INFO  17:33:51,920 - #51 i
INFO  17:33:51,920 - #46 ]
INFO  17:33:51,920 - #22 instanceof
INFO  17:33:51,920 - #51 Kvadar
INFO  17:33:51,920 - #44 )
INFO  17:33:51,920 - #47 {
INFO  17:33:51,920 - #12 print
INFO  17:33:51,920 - #43 (
INFO  17:33:51,920 - #49 k
INFO  17:33:51,920 - #44 )
INFO  17:33:51,920 - #39 ;
INFO  17:33:51,920 - #12 print
INFO  17:33:51,921 - #43 (
INFO  17:33:51,921 - #49 v
INFO  17:33:51,921 - #44 )
INFO  17:33:51,921 - #39 ;
INFO  17:33:51,921 - #12 print
INFO  17:33:51,921 - #43 (
INFO  17:33:51,921 - #49 a
INFO  17:33:51,921 - #44 )
INFO  17:33:51,921 - #39 ;
INFO  17:33:51,921 - #12 print
INFO  17:33:51,921 - #43 (
INFO  17:33:51,921 - #49 d
INFO  17:33:51,921 - #44 )
INFO  17:33:51,921 - #39 ;
INFO  17:33:51,921 - #12 print
INFO  17:33:51,921 - #43 (
INFO  17:33:51,921 - #49 a
INFO  17:33:51,921 - #44 )
INFO  17:33:51,921 - #39 ;
INFO  17:33:51,921 - #12 print
INFO  17:33:51,921 - #43 (
INFO  17:33:51,921 - #49 r
INFO  17:33:51,921 - #44 )
INFO  17:33:51,921 - #39 ;
INFO  17:33:51,921 - #12 print
INFO  17:33:51,921 - #43 (
INFO  17:33:51,921 - #51 eol
INFO  17:33:51,921 - #44 )
INFO  17:33:51,922 - #39 ;
INFO  17:33:51,922 - #48 }
INFO  17:33:51,922 - #51 i
INFO  17:33:51,922 - #37 ++
INFO  17:33:51,922 - #39 ;
INFO  17:33:51,922 - #48 }
INFO  17:33:51,922 - #10 while
INFO  17:33:51,922 - #43 (
INFO  17:33:51,922 - #51 i
INFO  17:33:51,923 - #32 <
INFO  17:33:51,923 - #50 6
INFO  17:33:51,924 - #44 )
INFO  17:33:51,924 - #39 ;
INFO  17:33:51,924 - #51 zapreminaS
INFO  17:33:51,924 - #36 =
INFO  17:33:51,924 - #50 0
INFO  17:33:51,924 - #39 ;
INFO  17:33:51,924 - #51 tezinaS
INFO  17:33:51,924 - #36 =
INFO  17:33:51,925 - #50 0
INFO  17:33:51,925 - #39 ;
INFO  17:33:51,925 - #51 i
INFO  17:33:51,925 - #36 =
INFO  17:33:51,925 - #50 1
INFO  17:33:51,925 - #39 ;
INFO  17:33:51,925 - #9 do
INFO  17:33:51,925 - #47 {
INFO  17:33:51,925 - #8 if
INFO  17:33:51,925 - #43 (
INFO  17:33:51,925 - #51 i
INFO  17:33:51,925 - #27 %
INFO  17:33:51,925 - #50 2
INFO  17:33:51,926 - #28 ==
INFO  17:33:51,926 - #50 0
INFO  17:33:51,926 - #44 )
INFO  17:33:51,926 - #47 {
INFO  17:33:51,926 - #51 i
INFO  17:33:51,926 - #37 ++
INFO  17:33:51,926 - #39 ;
INFO  17:33:51,926 - #17 continue
INFO  17:33:51,926 - #39 ;
INFO  17:33:51,927 - #48 }
INFO  17:33:51,927 - #51 zapreminaS
INFO  17:33:51,927 - #36 =
INFO  17:33:51,927 - #51 zapreminaS
INFO  17:33:51,927 - #23 +
INFO  17:33:51,927 - #51 predmeti
INFO  17:33:51,928 - #45 [
INFO  17:33:51,928 - #51 i
INFO  17:33:51,928 - #24 -
INFO  17:33:51,928 - #50 1
INFO  17:33:51,929 - #46 ]
INFO  17:33:51,929 - #42 .
INFO  17:33:51,929 - #51 zapremina
INFO  17:33:51,929 - #43 (
INFO  17:33:51,929 - #44 )
INFO  17:33:51,929 - #39 ;
INFO  17:33:51,929 - #51 tezinaS
INFO  17:33:51,929 - #36 =
INFO  17:33:51,929 - #51 tezinaS
INFO  17:33:51,929 - #23 +
INFO  17:33:51,929 - #51 predmeti
INFO  17:33:51,929 - #45 [
INFO  17:33:51,929 - #51 i
INFO  17:33:51,929 - #24 -
INFO  17:33:51,929 - #50 1
INFO  17:33:51,929 - #46 ]
INFO  17:33:51,929 - #42 .
INFO  17:33:51,929 - #51 Q
INFO  17:33:51,929 - #43 (
INFO  17:33:51,929 - #44 )
INFO  17:33:51,929 - #39 ;
INFO  17:33:51,929 - #51 ispis
INFO  17:33:51,929 - #43 (
INFO  17:33:51,929 - #51 predmeti
INFO  17:33:51,929 - #45 [
INFO  17:33:51,929 - #51 i
INFO  17:33:51,929 - #24 -
INFO  17:33:51,929 - #50 1
INFO  17:33:51,929 - #46 ]
INFO  17:33:51,929 - #44 )
INFO  17:33:51,929 - #39 ;
INFO  17:33:51,929 - #51 i
INFO  17:33:51,929 - #37 ++
INFO  17:33:51,929 - #39 ;
INFO  17:33:51,929 - #48 }
INFO  17:33:51,929 - #10 while
INFO  17:33:51,929 - #43 (
INFO  17:33:51,929 - #51 i
INFO  17:33:51,929 - #33 <=
INFO  17:33:51,929 - #50 6
INFO  17:33:51,930 - #44 )
INFO  17:33:51,930 - #39 ;
INFO  17:33:51,930 - #51 zapreminaK
INFO  17:33:51,930 - #36 =
INFO  17:33:51,930 - #50 0
INFO  17:33:51,930 - #39 ;
INFO  17:33:51,930 - #51 tezinaK
INFO  17:33:51,930 - #36 =
INFO  17:33:51,930 - #50 0
INFO  17:33:51,930 - #39 ;
INFO  17:33:51,930 - #51 i
INFO  17:33:51,930 - #36 =
INFO  17:33:51,930 - #50 1
INFO  17:33:51,930 - #39 ;
INFO  17:33:51,930 - #9 do
INFO  17:33:51,930 - #47 {
INFO  17:33:51,930 - #8 if
INFO  17:33:51,930 - #43 (
INFO  17:33:51,930 - #51 i
INFO  17:33:51,930 - #27 %
INFO  17:33:51,931 - #50 2
INFO  17:33:51,931 - #28 ==
INFO  17:33:51,931 - #50 1
INFO  17:33:51,931 - #44 )
INFO  17:33:51,931 - #47 {
INFO  17:33:51,931 - #51 i
INFO  17:33:51,931 - #37 ++
INFO  17:33:51,931 - #39 ;
INFO  17:33:51,931 - #17 continue
INFO  17:33:51,931 - #39 ;
INFO  17:33:51,931 - #48 }
INFO  17:33:51,931 - #51 zapreminaS
INFO  17:33:51,931 - #36 =
INFO  17:33:51,931 - #51 zapreminaS
INFO  17:33:51,931 - #23 +
INFO  17:33:51,931 - #51 predmeti
INFO  17:33:51,931 - #45 [
INFO  17:33:51,931 - #51 i
INFO  17:33:51,931 - #24 -
INFO  17:33:51,931 - #50 1
INFO  17:33:51,931 - #46 ]
INFO  17:33:51,931 - #42 .
INFO  17:33:51,931 - #51 zapremina
INFO  17:33:51,931 - #43 (
INFO  17:33:51,931 - #44 )
INFO  17:33:51,931 - #39 ;
INFO  17:33:51,931 - #51 tezinaS
INFO  17:33:51,931 - #36 =
INFO  17:33:51,931 - #51 tezinaS
INFO  17:33:51,931 - #23 +
INFO  17:33:51,931 - #51 predmeti
INFO  17:33:51,931 - #45 [
INFO  17:33:51,931 - #51 i
INFO  17:33:51,931 - #24 -
INFO  17:33:51,931 - #50 1
INFO  17:33:51,931 - #46 ]
INFO  17:33:51,931 - #42 .
INFO  17:33:51,931 - #51 Q
INFO  17:33:51,931 - #43 (
INFO  17:33:51,931 - #44 )
INFO  17:33:51,931 - #39 ;
INFO  17:33:51,931 - #51 ispis
INFO  17:33:51,931 - #43 (
INFO  17:33:51,931 - #51 predmeti
INFO  17:33:51,931 - #45 [
INFO  17:33:51,932 - #51 i
INFO  17:33:51,932 - #24 -
INFO  17:33:51,932 - #50 1
INFO  17:33:51,932 - #46 ]
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #51 i
INFO  17:33:51,932 - #37 ++
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #48 }
INFO  17:33:51,932 - #10 while
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 i
INFO  17:33:51,932 - #33 <=
INFO  17:33:51,932 - #50 6
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 zapreminaS
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 eol
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 zapreminaK
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 eol
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 tezinaS
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 eol
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,932 - #43 (
INFO  17:33:51,932 - #51 tezinaK
INFO  17:33:51,932 - #44 )
INFO  17:33:51,932 - #39 ;
INFO  17:33:51,932 - #12 print
INFO  17:33:51,933 - #43 (
INFO  17:33:51,933 - #51 eol
INFO  17:33:51,933 - #44 )
INFO  17:33:51,933 - #39 ;
INFO  17:33:51,933 - #48 }
INFO  17:33:51,933 - #48 }
INFO  17:33:51,933 - Parsiranje uspesno zavrseno.
INFO  17:33:51,959 - Program(
  ProgramName(
   test_303
  ) [ProgramName]
  ProgDeclarations(
    ProgDeclarations(
      ProgDeclarations(
        ProgDeclarations(
          ProgDeclarations(
            ProgDeclarations(
              NoProgDecl(
              ) [NoProgDecl]
              ProgConstDecl(
                ConstDecl(
                  ConstType(
                    Type(
                     int
                    ) [Type]
                  ) [ConstType]
                  ConstNameVals(
                    SingleConstNameVal(
                      ConstNameVal(
                       cinilac
                        IntConst(
                         4
                        ) [IntConst]
                      ) [ConstNameVal]
                    ) [SingleConstNameVal]
                    ConstNameVal(
                     delilac
                      IntConst(
                       3
                      ) [IntConst]
                    ) [ConstNameVal]
                  ) [ConstNameVals]
                ) [ConstDecl]
              ) [ProgConstDecl]
            ) [ProgDeclarations]
            ProgClassDecl(
              ClassDecl(
                ClassName(
                 Predmet
                ) [ClassName]
                DoesNotExtend(
                ) [DoesNotExtend]
                ClassBody(
                  ClassBodyStart(
                  ) [ClassBodyStart]
                  FieldDeclarations(
                    FieldDeclarations(
                      FieldDeclarations(
                        NoFieldDecl(
                        ) [NoFieldDecl]
                        FieldDeclaration(
                          FieldType(
                            Type(
                             int
                            ) [Type]
                          ) [FieldType]
                          SingleFieldName(
                            FieldNameOfSingle(
                             tezina
                            ) [FieldNameOfSingle]
                          ) [SingleFieldName]
                        ) [FieldDeclaration]
                      ) [FieldDeclarations]
                      FieldDeclaration(
                        FieldType(
                          Type(
                           int
                          ) [Type]
                        ) [FieldType]
                        SingleFieldName(
                          FieldNameOfSingle(
                           koefTezine
                          ) [FieldNameOfSingle]
                        ) [SingleFieldName]
                      ) [FieldDeclaration]
                    ) [FieldDeclarations]
                    FieldDeclaration(
                      FieldType(
                        Type(
                         char
                        ) [Type]
                      ) [FieldType]
                      SingleFieldName(
                        FieldNameOfSingle(
                         vrsta
                        ) [FieldNameOfSingle]
                      ) [SingleFieldName]
                    ) [FieldDeclaration]
                  ) [FieldDeclarations]
                  ClassHasMethods(
                    ClassMethodsStart(
                    ) [ClassMethodsStart]
                    ClassMethodDeclarations(
                      ClassFirstMethodConstr(
                        ConstructorDecl(
                          ConstructorName(
                           Predmet
                          ) [ConstructorName]
                          NoVarDecl(
                          ) [NoVarDecl]
                          ManyStatements(
                            NoStatement(
                            ) [NoStatement]
                            OneStatement(
                              DesignStatement(
                                DesignAssign(
                                  AssStatement(
                                    NamedDesignator(
                                     koefTezine
                                    ) [NamedDesignator]
                                    Assignop(
                                    ) [Assignop]
                                    PositiveExpr(
                                      ExprTerm(
                                        TermFactor(
                                          ConstFactor(
                                            IntConst(
                                             1
                                            ) [IntConst]
                                          ) [ConstFactor]
                                        ) [TermFactor]
                                      ) [ExprTerm]
                                    ) [PositiveExpr]
                                  ) [AssStatement]
                                ) [DesignAssign]
                              ) [DesignStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                        ) [ConstructorDecl]
                      ) [ClassFirstMethodConstr]
                      MethodDeclarations(
                        MethodDeclarations(
                          MethodDeclarations(
                            MethodDeclarations(
                              MethodDeclarations(
                                MethodDeclarations(
                                  MethodDeclarations(
                                    MethodDeclarations(
                                      NoMethodDecl(
                                      ) [NoMethodDecl]
                                      MethodDecl(
                                        MethodReturnsVoid(
                                        ) [MethodReturnsVoid]
                                        MethodSignature(
                                         postaviTezinu
                                          HasFormalParams(
                                            SingleFormalParam(
                                              FormalParamOfSingle(
                                                Type(
                                                 int
                                                ) [Type]
                                               tezina
                                              ) [FormalParamOfSingle]
                                            ) [SingleFormalParam]
                                          ) [HasFormalParams]
                                        ) [MethodSignature]
                                        NoVarDecl(
                                        ) [NoVarDecl]
                                        ManyStatements(
                                          NoStatement(
                                          ) [NoStatement]
                                          OneStatement(
                                            DesignStatement(
                                              DesignAssign(
                                                AssStatement(
                                                  AddressingMember(
                                                    ThisDesignator(
                                                    ) [ThisDesignator]
                                                   tezina
                                                  ) [AddressingMember]
                                                  Assignop(
                                                  ) [Assignop]
                                                  PositiveExpr(
                                                    ExprTerm(
                                                      TermWithMulop(
                                                        TermFactor(
                                                          DesignOfVarFactor(
                                                            NamedDesignator(
                                                             tezina
                                                            ) [NamedDesignator]
                                                          ) [DesignOfVarFactor]
                                                        ) [TermFactor]
                                                        MulopMul(
                                                        ) [MulopMul]
                                                        DesignOfVarFactor(
                                                          NamedDesignator(
                                                           koefTezine
                                                          ) [NamedDesignator]
                                                        ) [DesignOfVarFactor]
                                                      ) [TermWithMulop]
                                                    ) [ExprTerm]
                                                  ) [PositiveExpr]
                                                ) [AssStatement]
                                              ) [DesignAssign]
                                            ) [DesignStatement]
                                          ) [OneStatement]
                                        ) [ManyStatements]
                                      ) [MethodDecl]
                                    ) [MethodDeclarations]
                                    MethodDecl(
                                      MethodReturnsVoid(
                                      ) [MethodReturnsVoid]
                                      MethodSignature(
                                       ucitajTezinu
                                        NoFormalParams(
                                        ) [NoFormalParams]
                                      ) [MethodSignature]
                                      NoVarDecl(
                                      ) [NoVarDecl]
                                      ManyStatements(
                                        NoStatement(
                                        ) [NoStatement]
                                        OneStatement(
                                          ReadStatement(
                                            NamedDesignator(
                                             tezina
                                            ) [NamedDesignator]
                                          ) [ReadStatement]
                                        ) [OneStatement]
                                      ) [ManyStatements]
                                    ) [MethodDecl]
                                  ) [MethodDeclarations]
                                  MethodDecl(
                                    MethodReturnsValue(
                                      Type(
                                       int
                                      ) [Type]
                                    ) [MethodReturnsValue]
                                    MethodSignature(
                                     zapremina
                                      NoFormalParams(
                                      ) [NoFormalParams]
                                    ) [MethodSignature]
                                    NoVarDecl(
                                    ) [NoVarDecl]
                                    ManyStatements(
                                      NoStatement(
                                      ) [NoStatement]
                                      OneStatement(
                                        ReturnValStatement(
                                          PositiveExpr(
                                            ExprTerm(
                                              TermFactor(
                                                ConstFactor(
                                                  IntConst(
                                                   0
                                                  ) [IntConst]
                                                ) [ConstFactor]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [PositiveExpr]
                                        ) [ReturnValStatement]
                                      ) [OneStatement]
                                    ) [ManyStatements]
                                  ) [MethodDecl]
                                ) [MethodDeclarations]
                                MethodDecl(
                                  MethodReturnsValue(
                                    Type(
                                     int
                                    ) [Type]
                                  ) [MethodReturnsValue]
                                  MethodSignature(
                                   Q
                                    NoFormalParams(
                                    ) [NoFormalParams]
                                  ) [MethodSignature]
                                  NoVarDecl(
                                  ) [NoVarDecl]
                                  ManyStatements(
                                    NoStatement(
                                    ) [NoStatement]
                                    OneStatement(
                                      ReturnValStatement(
                                        PositiveExpr(
                                          ExprTerm(
                                            TermWithMulop(
                                              TermFactor(
                                                DesignOfMethodFactor(
                                                  NamedDesignator(
                                                   zapremina
                                                  ) [NamedDesignator]
                                                  NoActualParams(
                                                  ) [NoActualParams]
                                                ) [DesignOfMethodFactor]
                                              ) [TermFactor]
                                              MulopMul(
                                              ) [MulopMul]
                                              DesignOfVarFactor(
                                                NamedDesignator(
                                                 tezina
                                                ) [NamedDesignator]
                                              ) [DesignOfVarFactor]
                                            ) [TermWithMulop]
                                          ) [ExprTerm]
                                        ) [PositiveExpr]
                                      ) [ReturnValStatement]
                                    ) [OneStatement]
                                  ) [ManyStatements]
                                ) [MethodDecl]
                              ) [MethodDeclarations]
                              MethodDecl(
                                MethodReturnsVoid(
                                ) [MethodReturnsVoid]
                                MethodSignature(
                                 postaviVrstu
                                  HasFormalParams(
                                    SingleFormalParam(
                                      FormalParamOfSingle(
                                        Type(
                                         char
                                        ) [Type]
                                       vrsta
                                      ) [FormalParamOfSingle]
                                    ) [SingleFormalParam]
                                  ) [HasFormalParams]
                                ) [MethodSignature]
                                NoVarDecl(
                                ) [NoVarDecl]
                                ManyStatements(
                                  NoStatement(
                                  ) [NoStatement]
                                  OneStatement(
                                    DesignStatement(
                                      DesignAssign(
                                        AssStatement(
                                          AddressingMember(
                                            ThisDesignator(
                                            ) [ThisDesignator]
                                           vrsta
                                          ) [AddressingMember]
                                          Assignop(
                                          ) [Assignop]
                                          PositiveExpr(
                                            ExprTerm(
                                              TermFactor(
                                                DesignOfVarFactor(
                                                  NamedDesignator(
                                                   vrsta
                                                  ) [NamedDesignator]
                                                ) [DesignOfVarFactor]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [PositiveExpr]
                                        ) [AssStatement]
                                      ) [DesignAssign]
                                    ) [DesignStatement]
                                  ) [OneStatement]
                                ) [ManyStatements]
                              ) [MethodDecl]
                            ) [MethodDeclarations]
                            MethodDecl(
                              MethodReturnsValue(
                                Type(
                                 char
                                ) [Type]
                              ) [MethodReturnsValue]
                              MethodSignature(
                               dohvVrstu
                                NoFormalParams(
                                ) [NoFormalParams]
                              ) [MethodSignature]
                              NoVarDecl(
                              ) [NoVarDecl]
                              ManyStatements(
                                NoStatement(
                                ) [NoStatement]
                                OneStatement(
                                  ReturnValStatement(
                                    PositiveExpr(
                                      ExprTerm(
                                        TermFactor(
                                          DesignOfVarFactor(
                                            NamedDesignator(
                                             vrsta
                                            ) [NamedDesignator]
                                          ) [DesignOfVarFactor]
                                        ) [TermFactor]
                                      ) [ExprTerm]
                                    ) [PositiveExpr]
                                  ) [ReturnValStatement]
                                ) [OneStatement]
                              ) [ManyStatements]
                            ) [MethodDecl]
                          ) [MethodDeclarations]
                          MethodDecl(
                            MethodReturnsValue(
                              Type(
                               int
                              ) [Type]
                            ) [MethodReturnsValue]
                            MethodSignature(
                             dohvTezinu
                              NoFormalParams(
                              ) [NoFormalParams]
                            ) [MethodSignature]
                            NoVarDecl(
                            ) [NoVarDecl]
                            ManyStatements(
                              NoStatement(
                              ) [NoStatement]
                              OneStatement(
                                ReturnValStatement(
                                  PositiveExpr(
                                    ExprTerm(
                                      TermFactor(
                                        DesignOfVarFactor(
                                          NamedDesignator(
                                           tezina
                                          ) [NamedDesignator]
                                        ) [DesignOfVarFactor]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [PositiveExpr]
                                ) [ReturnValStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                          ) [MethodDecl]
                        ) [MethodDeclarations]
                        MethodDecl(
                          MethodReturnsVoid(
                          ) [MethodReturnsVoid]
                          MethodSignature(
                           ispisi
                            NoFormalParams(
                            ) [NoFormalParams]
                          ) [MethodSignature]
                          NoVarDecl(
                          ) [NoVarDecl]
                          ManyStatements(
                            ManyStatements(
                              NoStatement(
                              ) [NoStatement]
                              OneStatement(
                                PrintStatement(
                                  PositiveExpr(
                                    ExprTerm(
                                      TermFactor(
                                        DesignOfVarFactor(
                                          NamedDesignator(
                                           vrsta
                                          ) [NamedDesignator]
                                        ) [DesignOfVarFactor]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [PositiveExpr]
                                ) [PrintStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                            OneStatement(
                              PrintStatement(
                                PositiveExpr(
                                  ExprTerm(
                                    TermFactor(
                                      DesignOfMethodFactor(
                                        NamedDesignator(
                                         Q
                                        ) [NamedDesignator]
                                        NoActualParams(
                                        ) [NoActualParams]
                                      ) [DesignOfMethodFactor]
                                    ) [TermFactor]
                                  ) [ExprTerm]
                                ) [PositiveExpr]
                              ) [PrintStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                        ) [MethodDecl]
                      ) [MethodDeclarations]
                    ) [ClassMethodDeclarations]
                  ) [ClassHasMethods]
                ) [ClassBody]
              ) [ClassDecl]
            ) [ProgClassDecl]
          ) [ProgDeclarations]
          ProgClassDecl(
            ClassDecl(
              ClassName(
               Sfera
              ) [ClassName]
              DoesExtend(
                Type(
                 Predmet
                ) [Type]
              ) [DoesExtend]
              ClassBody(
                ClassBodyStart(
                ) [ClassBodyStart]
                FieldDeclarations(
                  NoFieldDecl(
                  ) [NoFieldDecl]
                  FieldDeclaration(
                    FieldType(
                      Type(
                       int
                      ) [Type]
                    ) [FieldType]
                    SingleFieldName(
                      FieldNameOfSingle(
                       r
                      ) [FieldNameOfSingle]
                    ) [SingleFieldName]
                  ) [FieldDeclaration]
                ) [FieldDeclarations]
                ClassHasMethods(
                  ClassMethodsStart(
                  ) [ClassMethodsStart]
                  ClassMethodDeclarations(
                    ClassFirstMethodConstr(
                      ConstructorDecl(
                        ConstructorName(
                         Sfera
                        ) [ConstructorName]
                        NoVarDecl(
                        ) [NoVarDecl]
                        ManyStatements(
                          ManyStatements(
                            NoStatement(
                            ) [NoStatement]
                            OneStatement(
                              DesignStatement(
                                SuperMethodCall(
                                  NoActualParams(
                                  ) [NoActualParams]
                                ) [SuperMethodCall]
                              ) [DesignStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                          OneStatement(
                            DesignStatement(
                              DesignAssign(
                                AssStatement(
                                  NamedDesignator(
                                   vrsta
                                  ) [NamedDesignator]
                                  Assignop(
                                  ) [Assignop]
                                  PositiveExpr(
                                    ExprTerm(
                                      TermFactor(
                                        ConstFactor(
                                          CharConst(
                                           s
                                          ) [CharConst]
                                        ) [ConstFactor]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [PositiveExpr]
                                ) [AssStatement]
                              ) [DesignAssign]
                            ) [DesignStatement]
                          ) [OneStatement]
                        ) [ManyStatements]
                      ) [ConstructorDecl]
                    ) [ClassFirstMethodConstr]
                    MethodDeclarations(
                      MethodDeclarations(
                        MethodDeclarations(
                          NoMethodDecl(
                          ) [NoMethodDecl]
                          MethodDecl(
                            MethodReturnsVoid(
                            ) [MethodReturnsVoid]
                            MethodSignature(
                             postaviPoluprecnik
                              HasFormalParams(
                                SingleFormalParam(
                                  FormalParamOfSingle(
                                    Type(
                                     int
                                    ) [Type]
                                   r
                                  ) [FormalParamOfSingle]
                                ) [SingleFormalParam]
                              ) [HasFormalParams]
                            ) [MethodSignature]
                            NoVarDecl(
                            ) [NoVarDecl]
                            ManyStatements(
                              NoStatement(
                              ) [NoStatement]
                              OneStatement(
                                DesignStatement(
                                  DesignAssign(
                                    AssStatement(
                                      AddressingMember(
                                        ThisDesignator(
                                        ) [ThisDesignator]
                                       r
                                      ) [AddressingMember]
                                      Assignop(
                                      ) [Assignop]
                                      PositiveExpr(
                                        ExprTerm(
                                          TermFactor(
                                            DesignOfVarFactor(
                                              NamedDesignator(
                                               r
                                              ) [NamedDesignator]
                                            ) [DesignOfVarFactor]
                                          ) [TermFactor]
                                        ) [ExprTerm]
                                      ) [PositiveExpr]
                                    ) [AssStatement]
                                  ) [DesignAssign]
                                ) [DesignStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                          ) [MethodDecl]
                        ) [MethodDeclarations]
                        MethodDecl(
                          MethodReturnsValue(
                            Type(
                             int
                            ) [Type]
                          ) [MethodReturnsValue]
                          MethodSignature(
                           zapremina
                            NoFormalParams(
                            ) [NoFormalParams]
                          ) [MethodSignature]
                          VarDeclarations(
                            NoVarDecl(
                            ) [NoVarDecl]
                            VarDecl(
                              VarType(
                                Type(
                                 int
                                ) [Type]
                              ) [VarType]
                              SingleVarName(
                                VarNameOfSingle(
                                 z
                                ) [VarNameOfSingle]
                              ) [SingleVarName]
                            ) [VarDecl]
                          ) [VarDeclarations]
                          ManyStatements(
                            ManyStatements(
                              NoStatement(
                              ) [NoStatement]
                              OneStatement(
                                DesignStatement(
                                  DesignAssign(
                                    AssStatement(
                                      NamedDesignator(
                                       z
                                      ) [NamedDesignator]
                                      Assignop(
                                      ) [Assignop]
                                      PositiveExpr(
                                        ExprTerm(
                                          TermFactor(
                                            DesignOfVarFactor(
                                              NamedDesignator(
                                               cinilac
                                              ) [NamedDesignator]
                                            ) [DesignOfVarFactor]
                                          ) [TermFactor]
                                        ) [ExprTerm]
                                      ) [PositiveExpr]
                                    ) [AssStatement]
                                  ) [DesignAssign]
                                ) [DesignStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                            OneStatement(
                              ReturnValStatement(
                                PositiveExpr(
                                  ExprTerm(
                                    TermWithMulop(
                                      TermFactor(
                                        DesignOfVarFactor(
                                          NamedDesignator(
                                           z
                                          ) [NamedDesignator]
                                        ) [DesignOfVarFactor]
                                      ) [TermFactor]
                                      MulopMul(
                                      ) [MulopMul]
                                      ParenFactor(
                                        PositiveExpr(
                                          ExprTerm(
                                            TermWithMulop(
                                              TermFactor(
                                                DesignOfVarFactor(
                                                  NamedDesignator(
                                                   r
                                                  ) [NamedDesignator]
                                                ) [DesignOfVarFactor]
                                              ) [TermFactor]
                                              MulopDiv(
                                              ) [MulopDiv]
                                              DesignOfVarFactor(
                                                NamedDesignator(
                                                 delilac
                                                ) [NamedDesignator]
                                              ) [DesignOfVarFactor]
                                            ) [TermWithMulop]
                                          ) [ExprTerm]
                                        ) [PositiveExpr]
                                      ) [ParenFactor]
                                    ) [TermWithMulop]
                                  ) [ExprTerm]
                                ) [PositiveExpr]
                              ) [ReturnValStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                        ) [MethodDecl]
                      ) [MethodDeclarations]
                      MethodDecl(
                        MethodReturnsVoid(
                        ) [MethodReturnsVoid]
                        MethodSignature(
                         ispisi
                          NoFormalParams(
                          ) [NoFormalParams]
                        ) [MethodSignature]
                        NoVarDecl(
                        ) [NoVarDecl]
                        ManyStatements(
                          ManyStatements(
                            ManyStatements(
                              NoStatement(
                              ) [NoStatement]
                              OneStatement(
                                DesignStatement(
                                  SuperMethodCall(
                                    NoActualParams(
                                    ) [NoActualParams]
                                  ) [SuperMethodCall]
                                ) [DesignStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                            OneStatement(
                              PrintStatement(
                                PositiveExpr(
                                  ExprTerm(
                                    TermFactor(
                                      DesignOfVarFactor(
                                        NamedDesignator(
                                         r
                                        ) [NamedDesignator]
                                      ) [DesignOfVarFactor]
                                    ) [TermFactor]
                                  ) [ExprTerm]
                                ) [PositiveExpr]
                              ) [PrintStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                          OneStatement(
                            PrintStatement(
                              PositiveExpr(
                                ExprTerm(
                                  TermFactor(
                                    DesignOfVarFactor(
                                      NamedDesignator(
                                       eol
                                      ) [NamedDesignator]
                                    ) [DesignOfVarFactor]
                                  ) [TermFactor]
                                ) [ExprTerm]
                              ) [PositiveExpr]
                            ) [PrintStatement]
                          ) [OneStatement]
                        ) [ManyStatements]
                      ) [MethodDecl]
                    ) [MethodDeclarations]
                  ) [ClassMethodDeclarations]
                ) [ClassHasMethods]
              ) [ClassBody]
            ) [ClassDecl]
          ) [ProgClassDecl]
        ) [ProgDeclarations]
        ProgClassDecl(
          ClassDecl(
            ClassName(
             Kvadar
            ) [ClassName]
            DoesExtend(
              Type(
               Predmet
              ) [Type]
            ) [DoesExtend]
            ClassBody(
              ClassBodyStart(
              ) [ClassBodyStart]
              FieldDeclarations(
                NoFieldDecl(
                ) [NoFieldDecl]
                FieldDeclaration(
                  FieldType(
                    Type(
                     int
                    ) [Type]
                  ) [FieldType]
                  FieldNames(
                    FieldNames(
                      SingleFieldName(
                        FieldNameOfSingle(
                         a
                        ) [FieldNameOfSingle]
                      ) [SingleFieldName]
                      FieldNameOfSingle(
                       b
                      ) [FieldNameOfSingle]
                    ) [FieldNames]
                    FieldNameOfSingle(
                     c
                    ) [FieldNameOfSingle]
                  ) [FieldNames]
                ) [FieldDeclaration]
              ) [FieldDeclarations]
              ClassHasMethods(
                ClassMethodsStart(
                ) [ClassMethodsStart]
                ClassMethodDeclarations(
                  ClassFirstMethodConstr(
                    ConstructorDecl(
                      ConstructorName(
                       Kvadar
                      ) [ConstructorName]
                      NoVarDecl(
                      ) [NoVarDecl]
                      ManyStatements(
                        ManyStatements(
                          NoStatement(
                          ) [NoStatement]
                          OneStatement(
                            DesignStatement(
                              SuperMethodCall(
                                NoActualParams(
                                ) [NoActualParams]
                              ) [SuperMethodCall]
                            ) [DesignStatement]
                          ) [OneStatement]
                        ) [ManyStatements]
                        OneStatement(
                          DesignStatement(
                            DesignAssign(
                              AssStatement(
                                NamedDesignator(
                                 vrsta
                                ) [NamedDesignator]
                                Assignop(
                                ) [Assignop]
                                PositiveExpr(
                                  ExprTerm(
                                    TermFactor(
                                      ConstFactor(
                                        CharConst(
                                         k
                                        ) [CharConst]
                                      ) [ConstFactor]
                                    ) [TermFactor]
                                  ) [ExprTerm]
                                ) [PositiveExpr]
                              ) [AssStatement]
                            ) [DesignAssign]
                          ) [DesignStatement]
                        ) [OneStatement]
                      ) [ManyStatements]
                    ) [ConstructorDecl]
                  ) [ClassFirstMethodConstr]
                  MethodDeclarations(
                    MethodDeclarations(
                      MethodDeclarations(
                        NoMethodDecl(
                        ) [NoMethodDecl]
                        MethodDecl(
                          MethodReturnsVoid(
                          ) [MethodReturnsVoid]
                          MethodSignature(
                           postaviStranice
                            HasFormalParams(
                              FormalParameters(
                                FormalParameters(
                                  SingleFormalParam(
                                    FormalParamOfSingle(
                                      Type(
                                       int
                                      ) [Type]
                                     a
                                    ) [FormalParamOfSingle]
                                  ) [SingleFormalParam]
                                  FormalParamOfSingle(
                                    Type(
                                     int
                                    ) [Type]
                                   b
                                  ) [FormalParamOfSingle]
                                ) [FormalParameters]
                                FormalParamOfSingle(
                                  Type(
                                   int
                                  ) [Type]
                                 c
                                ) [FormalParamOfSingle]
                              ) [FormalParameters]
                            ) [HasFormalParams]
                          ) [MethodSignature]
                          NoVarDecl(
                          ) [NoVarDecl]
                          ManyStatements(
                            ManyStatements(
                              ManyStatements(
                                NoStatement(
                                ) [NoStatement]
                                OneStatement(
                                  DesignStatement(
                                    DesignAssign(
                                      AssStatement(
                                        AddressingMember(
                                          ThisDesignator(
                                          ) [ThisDesignator]
                                         a
                                        ) [AddressingMember]
                                        Assignop(
                                        ) [Assignop]
                                        PositiveExpr(
                                          ExprTerm(
                                            TermFactor(
                                              DesignOfVarFactor(
                                                NamedDesignator(
                                                 a
                                                ) [NamedDesignator]
                                              ) [DesignOfVarFactor]
                                            ) [TermFactor]
                                          ) [ExprTerm]
                                        ) [PositiveExpr]
                                      ) [AssStatement]
                                    ) [DesignAssign]
                                  ) [DesignStatement]
                                ) [OneStatement]
                              ) [ManyStatements]
                              OneStatement(
                                DesignStatement(
                                  DesignAssign(
                                    AssStatement(
                                      AddressingMember(
                                        ThisDesignator(
                                        ) [ThisDesignator]
                                       b
                                      ) [AddressingMember]
                                      Assignop(
                                      ) [Assignop]
                                      PositiveExpr(
                                        ExprTerm(
                                          TermFactor(
                                            DesignOfVarFactor(
                                              NamedDesignator(
                                               b
                                              ) [NamedDesignator]
                                            ) [DesignOfVarFactor]
                                          ) [TermFactor]
                                        ) [ExprTerm]
                                      ) [PositiveExpr]
                                    ) [AssStatement]
                                  ) [DesignAssign]
                                ) [DesignStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                            OneStatement(
                              DesignStatement(
                                DesignAssign(
                                  AssStatement(
                                    AddressingMember(
                                      ThisDesignator(
                                      ) [ThisDesignator]
                                     c
                                    ) [AddressingMember]
                                    Assignop(
                                    ) [Assignop]
                                    PositiveExpr(
                                      ExprTerm(
                                        TermFactor(
                                          DesignOfVarFactor(
                                            NamedDesignator(
                                             c
                                            ) [NamedDesignator]
                                          ) [DesignOfVarFactor]
                                        ) [TermFactor]
                                      ) [ExprTerm]
                                    ) [PositiveExpr]
                                  ) [AssStatement]
                                ) [DesignAssign]
                              ) [DesignStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                        ) [MethodDecl]
                      ) [MethodDeclarations]
                      MethodDecl(
                        MethodReturnsValue(
                          Type(
                           int
                          ) [Type]
                        ) [MethodReturnsValue]
                        MethodSignature(
                         zapremina
                          NoFormalParams(
                          ) [NoFormalParams]
                        ) [MethodSignature]
                        VarDeclarations(
                          NoVarDecl(
                          ) [NoVarDecl]
                          VarDecl(
                            VarType(
                              Type(
                               int
                              ) [Type]
                            ) [VarType]
                            SingleVarName(
                              VarNameOfSingle(
                               z
                              ) [VarNameOfSingle]
                            ) [SingleVarName]
                          ) [VarDecl]
                        ) [VarDeclarations]
                        ManyStatements(
                          ManyStatements(
                            NoStatement(
                            ) [NoStatement]
                            OneStatement(
                              DesignStatement(
                                DesignAssign(
                                  AssStatement(
                                    NamedDesignator(
                                     z
                                    ) [NamedDesignator]
                                    Assignop(
                                    ) [Assignop]
                                    PositiveExpr(
                                      ExprTerm(
                                        TermWithMulop(
                                          TermWithMulop(
                                            TermFactor(
                                              DesignOfVarFactor(
                                                NamedDesignator(
                                                 a
                                                ) [NamedDesignator]
                                              ) [DesignOfVarFactor]
                                            ) [TermFactor]
                                            MulopMul(
                                            ) [MulopMul]
                                            DesignOfVarFactor(
                                              NamedDesignator(
                                               b
                                              ) [NamedDesignator]
                                            ) [DesignOfVarFactor]
                                          ) [TermWithMulop]
                                          MulopMul(
                                          ) [MulopMul]
                                          DesignOfVarFactor(
                                            NamedDesignator(
                                             c
                                            ) [NamedDesignator]
                                          ) [DesignOfVarFactor]
                                        ) [TermWithMulop]
                                      ) [ExprTerm]
                                    ) [PositiveExpr]
                                  ) [AssStatement]
                                ) [DesignAssign]
                              ) [DesignStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                          OneStatement(
                            ReturnValStatement(
                              PositiveExpr(
                                ExprTerm(
                                  TermFactor(
                                    DesignOfVarFactor(
                                      NamedDesignator(
                                       z
                                      ) [NamedDesignator]
                                    ) [DesignOfVarFactor]
                                  ) [TermFactor]
                                ) [ExprTerm]
                              ) [PositiveExpr]
                            ) [ReturnValStatement]
                          ) [OneStatement]
                        ) [ManyStatements]
                      ) [MethodDecl]
                    ) [MethodDeclarations]
                    MethodDecl(
                      MethodReturnsVoid(
                      ) [MethodReturnsVoid]
                      MethodSignature(
                       ispisi
                        NoFormalParams(
                        ) [NoFormalParams]
                      ) [MethodSignature]
                      NoVarDecl(
                      ) [NoVarDecl]
                      ManyStatements(
                        ManyStatements(
                          ManyStatements(
                            ManyStatements(
                              ManyStatements(
                                NoStatement(
                                ) [NoStatement]
                                OneStatement(
                                  DesignStatement(
                                    SuperMethodCall(
                                      NoActualParams(
                                      ) [NoActualParams]
                                    ) [SuperMethodCall]
                                  ) [DesignStatement]
                                ) [OneStatement]
                              ) [ManyStatements]
                              OneStatement(
                                PrintStatement(
                                  PositiveExpr(
                                    ExprTerm(
                                      TermFactor(
                                        DesignOfVarFactor(
                                          NamedDesignator(
                                           a
                                          ) [NamedDesignator]
                                        ) [DesignOfVarFactor]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [PositiveExpr]
                                ) [PrintStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                            OneStatement(
                              PrintStatement(
                                PositiveExpr(
                                  ExprTerm(
                                    TermFactor(
                                      DesignOfVarFactor(
                                        NamedDesignator(
                                         b
                                        ) [NamedDesignator]
                                      ) [DesignOfVarFactor]
                                    ) [TermFactor]
                                  ) [ExprTerm]
                                ) [PositiveExpr]
                              ) [PrintStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                          OneStatement(
                            PrintStatement(
                              PositiveExpr(
                                ExprTerm(
                                  TermFactor(
                                    DesignOfVarFactor(
                                      NamedDesignator(
                                       c
                                      ) [NamedDesignator]
                                    ) [DesignOfVarFactor]
                                  ) [TermFactor]
                                ) [ExprTerm]
                              ) [PositiveExpr]
                            ) [PrintStatement]
                          ) [OneStatement]
                        ) [ManyStatements]
                        OneStatement(
                          PrintStatement(
                            PositiveExpr(
                              ExprTerm(
                                TermFactor(
                                  DesignOfVarFactor(
                                    NamedDesignator(
                                     eol
                                    ) [NamedDesignator]
                                  ) [DesignOfVarFactor]
                                ) [TermFactor]
                              ) [ExprTerm]
                            ) [PositiveExpr]
                          ) [PrintStatement]
                        ) [OneStatement]
                      ) [ManyStatements]
                    ) [MethodDecl]
                  ) [MethodDeclarations]
                ) [ClassMethodDeclarations]
              ) [ClassHasMethods]
            ) [ClassBody]
          ) [ClassDecl]
        ) [ProgClassDecl]
      ) [ProgDeclarations]
      ProgVarDecl(
        GlobalVarDeclaration(
          VarType(
            Type(
             int
            ) [Type]
          ) [VarType]
          GlobalVarNames(
            SingleGlobalVarName(
              GlobalVarNameOfSingle(
               zapreminaK
              ) [GlobalVarNameOfSingle]
            ) [SingleGlobalVarName]
            GlobalVarNameOfSingle(
             zapreminaS
            ) [GlobalVarNameOfSingle]
          ) [GlobalVarNames]
        ) [GlobalVarDeclaration]
      ) [ProgVarDecl]
    ) [ProgDeclarations]
    ProgVarDecl(
      GlobalVarDeclaration(
        VarType(
          Type(
           int
          ) [Type]
        ) [VarType]
        GlobalVarNames(
          SingleGlobalVarName(
            GlobalVarNameOfSingle(
             tezinaK
            ) [GlobalVarNameOfSingle]
          ) [SingleGlobalVarName]
          GlobalVarNameOfSingle(
           tezinaS
          ) [GlobalVarNameOfSingle]
        ) [GlobalVarNames]
      ) [GlobalVarDeclaration]
    ) [ProgVarDecl]
  ) [ProgDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodReturnsVoid(
        ) [MethodReturnsVoid]
        MethodSignature(
         ispis
          HasFormalParams(
            SingleFormalParam(
              FormalParamOfSingle(
                Type(
                 Predmet
                ) [Type]
               p
              ) [FormalParamOfSingle]
            ) [SingleFormalParam]
          ) [HasFormalParams]
        ) [MethodSignature]
        NoVarDecl(
        ) [NoVarDecl]
        ManyStatements(
          ManyStatements(
            ManyStatements(
              NoStatement(
              ) [NoStatement]
              OneStatement(
                DesignStatement(
                  MethodCall(
                    AddressingMember(
                      NamedDesignator(
                       p
                      ) [NamedDesignator]
                     ispisi
                    ) [AddressingMember]
                    NoActualParams(
                    ) [NoActualParams]
                  ) [MethodCall]
                ) [DesignStatement]
              ) [OneStatement]
            ) [ManyStatements]
            OneStatement(
              PrintStatement(
                PositiveExpr(
                  ExprTerm(
                    TermFactor(
                      DesignOfVarFactor(
                        NamedDesignator(
                         eol
                        ) [NamedDesignator]
                      ) [DesignOfVarFactor]
                    ) [TermFactor]
                  ) [ExprTerm]
                ) [PositiveExpr]
              ) [PrintStatement]
            ) [OneStatement]
          ) [ManyStatements]
          OneStatement(
            PrintStatement(
              PositiveExpr(
                ExprTerm(
                  TermFactor(
                    DesignOfMethodFactor(
                      AddressingMember(
                        NamedDesignator(
                         p
                        ) [NamedDesignator]
                       dohvTezinu
                      ) [AddressingMember]
                      NoActualParams(
                      ) [NoActualParams]
                    ) [DesignOfMethodFactor]
                  ) [TermFactor]
                ) [ExprTerm]
              ) [PositiveExpr]
            ) [PrintStatement]
          ) [OneStatement]
        ) [ManyStatements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodReturnsVoid(
      ) [MethodReturnsVoid]
      MethodSignature(
       main
        NoFormalParams(
        ) [NoFormalParams]
      ) [MethodSignature]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              VarDeclarations(
                NoVarDecl(
                ) [NoVarDecl]
                VarDecl(
                  VarType(
                    Type(
                     Predmet
                    ) [Type]
                  ) [VarType]
                  SingleVarName(
                    VarNameOfArray(
                     predmeti
                    ) [VarNameOfArray]
                  ) [SingleVarName]
                ) [VarDecl]
              ) [VarDeclarations]
              VarDecl(
                VarType(
                  Type(
                   int
                  ) [Type]
                ) [VarType]
                SingleVarName(
                  VarNameOfSingle(
                   i
                  ) [VarNameOfSingle]
                ) [SingleVarName]
              ) [VarDecl]
            ) [VarDeclarations]
            VarDecl(
              VarType(
                Type(
                 Sfera
                ) [Type]
              ) [VarType]
              VarNames(
                VarNames(
                  SingleVarName(
                    VarNameOfSingle(
                     s1
                    ) [VarNameOfSingle]
                  ) [SingleVarName]
                  VarNameOfSingle(
                   s2
                  ) [VarNameOfSingle]
                ) [VarNames]
                VarNameOfSingle(
                 s3
                ) [VarNameOfSingle]
              ) [VarNames]
            ) [VarDecl]
          ) [VarDeclarations]
          VarDecl(
            VarType(
              Type(
               Kvadar
              ) [Type]
            ) [VarType]
            VarNames(
              VarNames(
                SingleVarName(
                  VarNameOfSingle(
                   k1
                  ) [VarNameOfSingle]
                ) [SingleVarName]
                VarNameOfSingle(
                 k2
                ) [VarNameOfSingle]
              ) [VarNames]
              VarNameOfSingle(
               k3
              ) [VarNameOfSingle]
            ) [VarNames]
          ) [VarDecl]
        ) [VarDeclarations]
        VarDecl(
          VarType(
            Type(
             int
            ) [Type]
          ) [VarType]
          SingleVarName(
            VarNameOfSingle(
             t
            ) [VarNameOfSingle]
          ) [SingleVarName]
        ) [VarDecl]
      ) [VarDeclarations]
      ManyStatements(
        ManyStatements(
          ManyStatements(
            ManyStatements(
              ManyStatements(
                ManyStatements(
                  ManyStatements(
                    ManyStatements(
                      ManyStatements(
                        ManyStatements(
                          ManyStatements(
                            ManyStatements(
                              ManyStatements(
                                ManyStatements(
                                  ManyStatements(
                                    ManyStatements(
                                      ManyStatements(
                                        ManyStatements(
                                          ManyStatements(
                                            ManyStatements(
                                              ManyStatements(
                                                ManyStatements(
                                                  ManyStatements(
                                                    ManyStatements(
                                                      ManyStatements(
                                                        ManyStatements(
                                                          ManyStatements(
                                                            ManyStatements(
                                                              ManyStatements(
                                                                ManyStatements(
                                                                  ManyStatements(
                                                                    ManyStatements(
                                                                      ManyStatements(
                                                                        ManyStatements(
                                                                          ManyStatements(
                                                                            ManyStatements(
                                                                              ManyStatements(
                                                                                ManyStatements(
                                                                                  NoStatement(
                                                                                  ) [NoStatement]
                                                                                  OneStatement(
                                                                                    DesignStatement(
                                                                                      DesignAssign(
                                                                                        AssStatement(
                                                                                          NamedDesignator(
                                                                                           predmeti
                                                                                          ) [NamedDesignator]
                                                                                          Assignop(
                                                                                          ) [Assignop]
                                                                                          PositiveExpr(
                                                                                            ExprTerm(
                                                                                              TermFactor(
                                                                                                NewArrayFactor(
                                                                                                  Type(
                                                                                                   Predmet
                                                                                                  ) [Type]
                                                                                                  PositiveExpr(
                                                                                                    ExprTerm(
                                                                                                      TermFactor(
                                                                                                        ConstFactor(
                                                                                                          IntConst(
                                                                                                           6
                                                                                                          ) [IntConst]
                                                                                                        ) [ConstFactor]
                                                                                                      ) [TermFactor]
                                                                                                    ) [ExprTerm]
                                                                                                  ) [PositiveExpr]
                                                                                                ) [NewArrayFactor]
                                                                                              ) [TermFactor]
                                                                                            ) [ExprTerm]
                                                                                          ) [PositiveExpr]
                                                                                        ) [AssStatement]
                                                                                      ) [DesignAssign]
                                                                                    ) [DesignStatement]
                                                                                  ) [OneStatement]
                                                                                ) [ManyStatements]
                                                                                OneStatement(
                                                                                  DesignStatement(
                                                                                    DesignAssign(
                                                                                      AssStatement(
                                                                                        NamedDesignator(
                                                                                         s1
                                                                                        ) [NamedDesignator]
                                                                                        Assignop(
                                                                                        ) [Assignop]
                                                                                        PositiveExpr(
                                                                                          ExprTerm(
                                                                                            TermFactor(
                                                                                              NewObjectFactor(
                                                                                                Type(
                                                                                                 Sfera
                                                                                                ) [Type]
                                                                                              ) [NewObjectFactor]
                                                                                            ) [TermFactor]
                                                                                          ) [ExprTerm]
                                                                                        ) [PositiveExpr]
                                                                                      ) [AssStatement]
                                                                                    ) [DesignAssign]
                                                                                  ) [DesignStatement]
                                                                                ) [OneStatement]
                                                                              ) [ManyStatements]
                                                                              OneStatement(
                                                                                DesignStatement(
                                                                                  DesignAssign(
                                                                                    AssStatement(
                                                                                      NamedDesignator(
                                                                                       s2
                                                                                      ) [NamedDesignator]
                                                                                      Assignop(
                                                                                      ) [Assignop]
                                                                                      PositiveExpr(
                                                                                        ExprTerm(
                                                                                          TermFactor(
                                                                                            NewObjectFactor(
                                                                                              Type(
                                                                                               Sfera
                                                                                              ) [Type]
                                                                                            ) [NewObjectFactor]
                                                                                          ) [TermFactor]
                                                                                        ) [ExprTerm]
                                                                                      ) [PositiveExpr]
                                                                                    ) [AssStatement]
                                                                                  ) [DesignAssign]
                                                                                ) [DesignStatement]
                                                                              ) [OneStatement]
                                                                            ) [ManyStatements]
                                                                            OneStatement(
                                                                              DesignStatement(
                                                                                DesignAssign(
                                                                                  AssStatement(
                                                                                    NamedDesignator(
                                                                                     s3
                                                                                    ) [NamedDesignator]
                                                                                    Assignop(
                                                                                    ) [Assignop]
                                                                                    PositiveExpr(
                                                                                      ExprTerm(
                                                                                        TermFactor(
                                                                                          NewObjectFactor(
                                                                                            Type(
                                                                                             Sfera
                                                                                            ) [Type]
                                                                                          ) [NewObjectFactor]
                                                                                        ) [TermFactor]
                                                                                      ) [ExprTerm]
                                                                                    ) [PositiveExpr]
                                                                                  ) [AssStatement]
                                                                                ) [DesignAssign]
                                                                              ) [DesignStatement]
                                                                            ) [OneStatement]
                                                                          ) [ManyStatements]
                                                                          OneStatement(
                                                                            DesignStatement(
                                                                              DesignAssign(
                                                                                AssStatement(
                                                                                  NamedDesignator(
                                                                                   k1
                                                                                  ) [NamedDesignator]
                                                                                  Assignop(
                                                                                  ) [Assignop]
                                                                                  PositiveExpr(
                                                                                    ExprTerm(
                                                                                      TermFactor(
                                                                                        NewObjectFactor(
                                                                                          Type(
                                                                                           Kvadar
                                                                                          ) [Type]
                                                                                        ) [NewObjectFactor]
                                                                                      ) [TermFactor]
                                                                                    ) [ExprTerm]
                                                                                  ) [PositiveExpr]
                                                                                ) [AssStatement]
                                                                              ) [DesignAssign]
                                                                            ) [DesignStatement]
                                                                          ) [OneStatement]
                                                                        ) [ManyStatements]
                                                                        OneStatement(
                                                                          DesignStatement(
                                                                            DesignAssign(
                                                                              AssStatement(
                                                                                NamedDesignator(
                                                                                 k2
                                                                                ) [NamedDesignator]
                                                                                Assignop(
                                                                                ) [Assignop]
                                                                                PositiveExpr(
                                                                                  ExprTerm(
                                                                                    TermFactor(
                                                                                      NewObjectFactor(
                                                                                        Type(
                                                                                         Kvadar
                                                                                        ) [Type]
                                                                                      ) [NewObjectFactor]
                                                                                    ) [TermFactor]
                                                                                  ) [ExprTerm]
                                                                                ) [PositiveExpr]
                                                                              ) [AssStatement]
                                                                            ) [DesignAssign]
                                                                          ) [DesignStatement]
                                                                        ) [OneStatement]
                                                                      ) [ManyStatements]
                                                                      OneStatement(
                                                                        DesignStatement(
                                                                          DesignAssign(
                                                                            AssStatement(
                                                                              NamedDesignator(
                                                                               k3
                                                                              ) [NamedDesignator]
                                                                              Assignop(
                                                                              ) [Assignop]
                                                                              PositiveExpr(
                                                                                ExprTerm(
                                                                                  TermFactor(
                                                                                    NewObjectFactor(
                                                                                      Type(
                                                                                       Kvadar
                                                                                      ) [Type]
                                                                                    ) [NewObjectFactor]
                                                                                  ) [TermFactor]
                                                                                ) [ExprTerm]
                                                                              ) [PositiveExpr]
                                                                            ) [AssStatement]
                                                                          ) [DesignAssign]
                                                                        ) [DesignStatement]
                                                                      ) [OneStatement]
                                                                    ) [ManyStatements]
                                                                    OneStatement(
                                                                      DesignStatement(
                                                                        MethodCall(
                                                                          AddressingMember(
                                                                            NamedDesignator(
                                                                             s1
                                                                            ) [NamedDesignator]
                                                                           postaviPoluprecnik
                                                                          ) [AddressingMember]
                                                                          HasActualParams(
                                                                            SingleActualParam(
                                                                              PositiveExpr(
                                                                                ExprTerm(
                                                                                  TermFactor(
                                                                                    ConstFactor(
                                                                                      IntConst(
                                                                                       1
                                                                                      ) [IntConst]
                                                                                    ) [ConstFactor]
                                                                                  ) [TermFactor]
                                                                                ) [ExprTerm]
                                                                              ) [PositiveExpr]
                                                                            ) [SingleActualParam]
                                                                          ) [HasActualParams]
                                                                        ) [MethodCall]
                                                                      ) [DesignStatement]
                                                                    ) [OneStatement]
                                                                  ) [ManyStatements]
                                                                  OneStatement(
                                                                    DesignStatement(
                                                                      MethodCall(
                                                                        AddressingMember(
                                                                          NamedDesignator(
                                                                           s2
                                                                          ) [NamedDesignator]
                                                                         postaviPoluprecnik
                                                                        ) [AddressingMember]
                                                                        HasActualParams(
                                                                          SingleActualParam(
                                                                            PositiveExpr(
                                                                              ExprTerm(
                                                                                TermFactor(
                                                                                  ConstFactor(
                                                                                    IntConst(
                                                                                     2
                                                                                    ) [IntConst]
                                                                                  ) [ConstFactor]
                                                                                ) [TermFactor]
                                                                              ) [ExprTerm]
                                                                            ) [PositiveExpr]
                                                                          ) [SingleActualParam]
                                                                        ) [HasActualParams]
                                                                      ) [MethodCall]
                                                                    ) [DesignStatement]
                                                                  ) [OneStatement]
                                                                ) [ManyStatements]
                                                                OneStatement(
                                                                  DesignStatement(
                                                                    MethodCall(
                                                                      AddressingMember(
                                                                        NamedDesignator(
                                                                         s3
                                                                        ) [NamedDesignator]
                                                                       postaviPoluprecnik
                                                                      ) [AddressingMember]
                                                                      HasActualParams(
                                                                        SingleActualParam(
                                                                          PositiveExpr(
                                                                            ExprTerm(
                                                                              TermFactor(
                                                                                ConstFactor(
                                                                                  IntConst(
                                                                                   3
                                                                                  ) [IntConst]
                                                                                ) [ConstFactor]
                                                                              ) [TermFactor]
                                                                            ) [ExprTerm]
                                                                          ) [PositiveExpr]
                                                                        ) [SingleActualParam]
                                                                      ) [HasActualParams]
                                                                    ) [MethodCall]
                                                                  ) [DesignStatement]
                                                                ) [OneStatement]
                                                              ) [ManyStatements]
                                                              OneStatement(
                                                                DesignStatement(
                                                                  MethodCall(
                                                                    AddressingMember(
                                                                      NamedDesignator(
                                                                       k1
                                                                      ) [NamedDesignator]
                                                                     postaviStranice
                                                                    ) [AddressingMember]
                                                                    HasActualParams(
                                                                      ActualParameters(
                                                                        ActualParameters(
                                                                          SingleActualParam(
                                                                            PositiveExpr(
                                                                              ExprTerm(
                                                                                TermFactor(
                                                                                  ConstFactor(
                                                                                    IntConst(
                                                                                     1
                                                                                    ) [IntConst]
                                                                                  ) [ConstFactor]
                                                                                ) [TermFactor]
                                                                              ) [ExprTerm]
                                                                            ) [PositiveExpr]
                                                                          ) [SingleActualParam]
                                                                          PositiveExpr(
                                                                            ExprTerm(
                                                                              TermFactor(
                                                                                ConstFactor(
                                                                                  IntConst(
                                                                                   2
                                                                                  ) [IntConst]
                                                                                ) [ConstFactor]
                                                                              ) [TermFactor]
                                                                            ) [ExprTerm]
                                                                          ) [PositiveExpr]
                                                                        ) [ActualParameters]
                                                                        PositiveExpr(
                                                                          ExprTerm(
                                                                            TermFactor(
                                                                              ConstFactor(
                                                                                IntConst(
                                                                                 3
                                                                                ) [IntConst]
                                                                              ) [ConstFactor]
                                                                            ) [TermFactor]
                                                                          ) [ExprTerm]
                                                                        ) [PositiveExpr]
                                                                      ) [ActualParameters]
                                                                    ) [HasActualParams]
                                                                  ) [MethodCall]
                                                                ) [DesignStatement]
                                                              ) [OneStatement]
                                                            ) [ManyStatements]
                                                            OneStatement(
                                                              DesignStatement(
                                                                MethodCall(
                                                                  AddressingMember(
                                                                    NamedDesignator(
                                                                     k2
                                                                    ) [NamedDesignator]
                                                                   postaviStranice
                                                                  ) [AddressingMember]
                                                                  HasActualParams(
                                                                    ActualParameters(
                                                                      ActualParameters(
                                                                        SingleActualParam(
                                                                          PositiveExpr(
                                                                            ExprTerm(
                                                                              TermFactor(
                                                                                ConstFactor(
                                                                                  IntConst(
                                                                                   2
                                                                                  ) [IntConst]
                                                                                ) [ConstFactor]
                                                                              ) [TermFactor]
                                                                            ) [ExprTerm]
                                                                          ) [PositiveExpr]
                                                                        ) [SingleActualParam]
                                                                        PositiveExpr(
                                                                          ExprTerm(
                                                                            TermFactor(
                                                                              ConstFactor(
                                                                                IntConst(
                                                                                 3
                                                                                ) [IntConst]
                                                                              ) [ConstFactor]
                                                                            ) [TermFactor]
                                                                          ) [ExprTerm]
                                                                        ) [PositiveExpr]
                                                                      ) [ActualParameters]
                                                                      PositiveExpr(
                                                                        ExprTerm(
                                                                          TermFactor(
                                                                            ConstFactor(
                                                                              IntConst(
                                                                               4
                                                                              ) [IntConst]
                                                                            ) [ConstFactor]
                                                                          ) [TermFactor]
                                                                        ) [ExprTerm]
                                                                      ) [PositiveExpr]
                                                                    ) [ActualParameters]
                                                                  ) [HasActualParams]
                                                                ) [MethodCall]
                                                              ) [DesignStatement]
                                                            ) [OneStatement]
                                                          ) [ManyStatements]
                                                          OneStatement(
                                                            DesignStatement(
                                                              MethodCall(
                                                                AddressingMember(
                                                                  NamedDesignator(
                                                                   k3
                                                                  ) [NamedDesignator]
                                                                 postaviStranice
                                                                ) [AddressingMember]
                                                                HasActualParams(
                                                                  ActualParameters(
                                                                    ActualParameters(
                                                                      SingleActualParam(
                                                                        PositiveExpr(
                                                                          ExprTerm(
                                                                            TermFactor(
                                                                              ConstFactor(
                                                                                IntConst(
                                                                                 3
                                                                                ) [IntConst]
                                                                              ) [ConstFactor]
                                                                            ) [TermFactor]
                                                                          ) [ExprTerm]
                                                                        ) [PositiveExpr]
                                                                      ) [SingleActualParam]
                                                                      PositiveExpr(
                                                                        ExprTerm(
                                                                          TermFactor(
                                                                            ConstFactor(
                                                                              IntConst(
                                                                               4
                                                                              ) [IntConst]
                                                                            ) [ConstFactor]
                                                                          ) [TermFactor]
                                                                        ) [ExprTerm]
                                                                      ) [PositiveExpr]
                                                                    ) [ActualParameters]
                                                                    PositiveExpr(
                                                                      ExprTerm(
                                                                        TermFactor(
                                                                          ConstFactor(
                                                                            IntConst(
                                                                             5
                                                                            ) [IntConst]
                                                                          ) [ConstFactor]
                                                                        ) [TermFactor]
                                                                      ) [ExprTerm]
                                                                    ) [PositiveExpr]
                                                                  ) [ActualParameters]
                                                                ) [HasActualParams]
                                                              ) [MethodCall]
                                                            ) [DesignStatement]
                                                          ) [OneStatement]
                                                        ) [ManyStatements]
                                                        OneStatement(
                                                          DesignStatement(
                                                            DesignAssign(
                                                              AssStatement(
                                                                AddressingElem(
                                                                  NamedDesignator(
                                                                   predmeti
                                                                  ) [NamedDesignator]
                                                                  PositiveExpr(
                                                                    ExprTerm(
                                                                      TermFactor(
                                                                        ConstFactor(
                                                                          IntConst(
                                                                           0
                                                                          ) [IntConst]
                                                                        ) [ConstFactor]
                                                                      ) [TermFactor]
                                                                    ) [ExprTerm]
                                                                  ) [PositiveExpr]
                                                                ) [AddressingElem]
                                                                Assignop(
                                                                ) [Assignop]
                                                                PositiveExpr(
                                                                  ExprTerm(
                                                                    TermFactor(
                                                                      DesignOfVarFactor(
                                                                        NamedDesignator(
                                                                         s1
                                                                        ) [NamedDesignator]
                                                                      ) [DesignOfVarFactor]
                                                                    ) [TermFactor]
                                                                  ) [ExprTerm]
                                                                ) [PositiveExpr]
                                                              ) [AssStatement]
                                                            ) [DesignAssign]
                                                          ) [DesignStatement]
                                                        ) [OneStatement]
                                                      ) [ManyStatements]
                                                      OneStatement(
                                                        DesignStatement(
                                                          DesignAssign(
                                                            AssStatement(
                                                              AddressingElem(
                                                                NamedDesignator(
                                                                 predmeti
                                                                ) [NamedDesignator]
                                                                PositiveExpr(
                                                                  ExprTerm(
                                                                    TermFactor(
                                                                      ConstFactor(
                                                                        IntConst(
                                                                         2
                                                                        ) [IntConst]
                                                                      ) [ConstFactor]
                                                                    ) [TermFactor]
                                                                  ) [ExprTerm]
                                                                ) [PositiveExpr]
                                                              ) [AddressingElem]
                                                              Assignop(
                                                              ) [Assignop]
                                                              PositiveExpr(
                                                                ExprTerm(
                                                                  TermFactor(
                                                                    DesignOfVarFactor(
                                                                      NamedDesignator(
                                                                       s2
                                                                      ) [NamedDesignator]
                                                                    ) [DesignOfVarFactor]
                                                                  ) [TermFactor]
                                                                ) [ExprTerm]
                                                              ) [PositiveExpr]
                                                            ) [AssStatement]
                                                          ) [DesignAssign]
                                                        ) [DesignStatement]
                                                      ) [OneStatement]
                                                    ) [ManyStatements]
                                                    OneStatement(
                                                      DesignStatement(
                                                        DesignAssign(
                                                          AssStatement(
                                                            AddressingElem(
                                                              NamedDesignator(
                                                               predmeti
                                                              ) [NamedDesignator]
                                                              PositiveExpr(
                                                                ExprTerm(
                                                                  TermFactor(
                                                                    ConstFactor(
                                                                      IntConst(
                                                                       4
                                                                      ) [IntConst]
                                                                    ) [ConstFactor]
                                                                  ) [TermFactor]
                                                                ) [ExprTerm]
                                                              ) [PositiveExpr]
                                                            ) [AddressingElem]
                                                            Assignop(
                                                            ) [Assignop]
                                                            PositiveExpr(
                                                              ExprTerm(
                                                                TermFactor(
                                                                  DesignOfVarFactor(
                                                                    NamedDesignator(
                                                                     s3
                                                                    ) [NamedDesignator]
                                                                  ) [DesignOfVarFactor]
                                                                ) [TermFactor]
                                                              ) [ExprTerm]
                                                            ) [PositiveExpr]
                                                          ) [AssStatement]
                                                        ) [DesignAssign]
                                                      ) [DesignStatement]
                                                    ) [OneStatement]
                                                  ) [ManyStatements]
                                                  OneStatement(
                                                    DesignStatement(
                                                      DesignAssign(
                                                        AssStatement(
                                                          AddressingElem(
                                                            NamedDesignator(
                                                             predmeti
                                                            ) [NamedDesignator]
                                                            PositiveExpr(
                                                              ExprTerm(
                                                                TermFactor(
                                                                  ConstFactor(
                                                                    IntConst(
                                                                     1
                                                                    ) [IntConst]
                                                                  ) [ConstFactor]
                                                                ) [TermFactor]
                                                              ) [ExprTerm]
                                                            ) [PositiveExpr]
                                                          ) [AddressingElem]
                                                          Assignop(
                                                          ) [Assignop]
                                                          PositiveExpr(
                                                            ExprTerm(
                                                              TermFactor(
                                                                DesignOfVarFactor(
                                                                  NamedDesignator(
                                                                   k1
                                                                  ) [NamedDesignator]
                                                                ) [DesignOfVarFactor]
                                                              ) [TermFactor]
                                                            ) [ExprTerm]
                                                          ) [PositiveExpr]
                                                        ) [AssStatement]
                                                      ) [DesignAssign]
                                                    ) [DesignStatement]
                                                  ) [OneStatement]
                                                ) [ManyStatements]
                                                OneStatement(
                                                  DesignStatement(
                                                    DesignAssign(
                                                      AssStatement(
                                                        AddressingElem(
                                                          NamedDesignator(
                                                           predmeti
                                                          ) [NamedDesignator]
                                                          PositiveExpr(
                                                            ExprTerm(
                                                              TermFactor(
                                                                ConstFactor(
                                                                  IntConst(
                                                                   3
                                                                  ) [IntConst]
                                                                ) [ConstFactor]
                                                              ) [TermFactor]
                                                            ) [ExprTerm]
                                                          ) [PositiveExpr]
                                                        ) [AddressingElem]
                                                        Assignop(
                                                        ) [Assignop]
                                                        PositiveExpr(
                                                          ExprTerm(
                                                            TermFactor(
                                                              DesignOfVarFactor(
                                                                NamedDesignator(
                                                                 k2
                                                                ) [NamedDesignator]
                                                              ) [DesignOfVarFactor]
                                                            ) [TermFactor]
                                                          ) [ExprTerm]
                                                        ) [PositiveExpr]
                                                      ) [AssStatement]
                                                    ) [DesignAssign]
                                                  ) [DesignStatement]
                                                ) [OneStatement]
                                              ) [ManyStatements]
                                              OneStatement(
                                                DesignStatement(
                                                  DesignAssign(
                                                    AssStatement(
                                                      AddressingElem(
                                                        NamedDesignator(
                                                         predmeti
                                                        ) [NamedDesignator]
                                                        PositiveExpr(
                                                          ExprTerm(
                                                            TermFactor(
                                                              ConstFactor(
                                                                IntConst(
                                                                 5
                                                                ) [IntConst]
                                                              ) [ConstFactor]
                                                            ) [TermFactor]
                                                          ) [ExprTerm]
                                                        ) [PositiveExpr]
                                                      ) [AddressingElem]
                                                      Assignop(
                                                      ) [Assignop]
                                                      PositiveExpr(
                                                        ExprTerm(
                                                          TermFactor(
                                                            DesignOfVarFactor(
                                                              NamedDesignator(
                                                               k3
                                                              ) [NamedDesignator]
                                                            ) [DesignOfVarFactor]
                                                          ) [TermFactor]
                                                        ) [ExprTerm]
                                                      ) [PositiveExpr]
                                                    ) [AssStatement]
                                                  ) [DesignAssign]
                                                ) [DesignStatement]
                                              ) [OneStatement]
                                            ) [ManyStatements]
                                            OneStatement(
                                              ReadStatement(
                                                NamedDesignator(
                                                 t
                                                ) [NamedDesignator]
                                              ) [ReadStatement]
                                            ) [OneStatement]
                                          ) [ManyStatements]
                                          OneStatement(
                                            DesignStatement(
                                              DesignAssign(
                                                AssStatement(
                                                  NamedDesignator(
                                                   i
                                                  ) [NamedDesignator]
                                                  Assignop(
                                                  ) [Assignop]
                                                  PositiveExpr(
                                                    ExprTerm(
                                                      TermFactor(
                                                        ConstFactor(
                                                          IntConst(
                                                           0
                                                          ) [IntConst]
                                                        ) [ConstFactor]
                                                      ) [TermFactor]
                                                    ) [ExprTerm]
                                                  ) [PositiveExpr]
                                                ) [AssStatement]
                                              ) [DesignAssign]
                                            ) [DesignStatement]
                                          ) [OneStatement]
                                        ) [ManyStatements]
                                        OneStatement(
                                          DoWhileStatement(
                                            DoWhileLoopStart(
                                            ) [DoWhileLoopStart]
                                            BlockStatement(
                                              Statements(
                                                ManyStatements(
                                                  ManyStatements(
                                                    ManyStatements(
                                                      NoStatement(
                                                      ) [NoStatement]
                                                      OneStatement(
                                                        DesignStatement(
                                                          MethodCall(
                                                            AddressingMember(
                                                              AddressingElem(
                                                                NamedDesignator(
                                                                 predmeti
                                                                ) [NamedDesignator]
                                                                PositiveExpr(
                                                                  ExprTerm(
                                                                    TermFactor(
                                                                      DesignOfVarFactor(
                                                                        NamedDesignator(
                                                                         i
                                                                        ) [NamedDesignator]
                                                                      ) [DesignOfVarFactor]
                                                                    ) [TermFactor]
                                                                  ) [ExprTerm]
                                                                ) [PositiveExpr]
                                                              ) [AddressingElem]
                                                             postaviTezinu
                                                            ) [AddressingMember]
                                                            HasActualParams(
                                                              SingleActualParam(
                                                                PositiveExpr(
                                                                  ExprTerm(
                                                                    TermFactor(
                                                                      DesignOfVarFactor(
                                                                        NamedDesignator(
                                                                         t
                                                                        ) [NamedDesignator]
                                                                      ) [DesignOfVarFactor]
                                                                    ) [TermFactor]
                                                                  ) [ExprTerm]
                                                                ) [PositiveExpr]
                                                              ) [SingleActualParam]
                                                            ) [HasActualParams]
                                                          ) [MethodCall]
                                                        ) [DesignStatement]
                                                      ) [OneStatement]
                                                    ) [ManyStatements]
                                                    OneStatement(
                                                      IfElseStatement(
                                                        IfStart(
                                                        ) [IfStart]
                                                        IfCondition(
                                                          ConditionTerm(
                                                            CondTermFact(
                                                              InstanceofCondFact(
                                                                AddressingElem(
                                                                  NamedDesignator(
                                                                   predmeti
                                                                  ) [NamedDesignator]
                                                                  PositiveExpr(
                                                                    ExprTerm(
                                                                      TermFactor(
                                                                        DesignOfVarFactor(
                                                                          NamedDesignator(
                                                                           i
                                                                          ) [NamedDesignator]
                                                                        ) [DesignOfVarFactor]
                                                                      ) [TermFactor]
                                                                    ) [ExprTerm]
                                                                  ) [PositiveExpr]
                                                                ) [AddressingElem]
                                                                Type(
                                                                 Sfera
                                                                ) [Type]
                                                              ) [InstanceofCondFact]
                                                            ) [CondTermFact]
                                                          ) [ConditionTerm]
                                                        ) [IfCondition]
                                                        BlockStatement(
                                                          Statements(
                                                            ManyStatements(
                                                              ManyStatements(
                                                                ManyStatements(
                                                                  ManyStatements(
                                                                    ManyStatements(
                                                                      ManyStatements(
                                                                        NoStatement(
                                                                        ) [NoStatement]
                                                                        OneStatement(
                                                                          PrintStatement(
                                                                            PositiveExpr(
                                                                              ExprTerm(
                                                                                TermFactor(
                                                                                  ConstFactor(
                                                                                    CharConst(
                                                                                     s
                                                                                    ) [CharConst]
                                                                                  ) [ConstFactor]
                                                                                ) [TermFactor]
                                                                              ) [ExprTerm]
                                                                            ) [PositiveExpr]
                                                                          ) [PrintStatement]
                                                                        ) [OneStatement]
                                                                      ) [ManyStatements]
                                                                      OneStatement(
                                                                        PrintStatement(
                                                                          PositiveExpr(
                                                                            ExprTerm(
                                                                              TermFactor(
                                                                                ConstFactor(
                                                                                  CharConst(
                                                                                   f
                                                                                  ) [CharConst]
                                                                                ) [ConstFactor]
                                                                              ) [TermFactor]
                                                                            ) [ExprTerm]
                                                                          ) [PositiveExpr]
                                                                        ) [PrintStatement]
                                                                      ) [OneStatement]
                                                                    ) [ManyStatements]
                                                                    OneStatement(
                                                                      PrintStatement(
                                                                        PositiveExpr(
                                                                          ExprTerm(
                                                                            TermFactor(
                                                                              ConstFactor(
                                                                                CharConst(
                                                                                 e
                                                                                ) [CharConst]
                                                                              ) [ConstFactor]
                                                                            ) [TermFactor]
                                                                          ) [ExprTerm]
                                                                        ) [PositiveExpr]
                                                                      ) [PrintStatement]
                                                                    ) [OneStatement]
                                                                  ) [ManyStatements]
                                                                  OneStatement(
                                                                    PrintStatement(
                                                                      PositiveExpr(
                                                                        ExprTerm(
                                                                          TermFactor(
                                                                            ConstFactor(
                                                                              CharConst(
                                                                               r
                                                                              ) [CharConst]
                                                                            ) [ConstFactor]
                                                                          ) [TermFactor]
                                                                        ) [ExprTerm]
                                                                      ) [PositiveExpr]
                                                                    ) [PrintStatement]
                                                                  ) [OneStatement]
                                                                ) [ManyStatements]
                                                                OneStatement(
                                                                  PrintStatement(
                                                                    PositiveExpr(
                                                                      ExprTerm(
                                                                        TermFactor(
                                                                          ConstFactor(
                                                                            CharConst(
                                                                             a
                                                                            ) [CharConst]
                                                                          ) [ConstFactor]
                                                                        ) [TermFactor]
                                                                      ) [ExprTerm]
                                                                    ) [PositiveExpr]
                                                                  ) [PrintStatement]
                                                                ) [OneStatement]
                                                              ) [ManyStatements]
                                                              OneStatement(
                                                                PrintStatement(
                                                                  PositiveExpr(
                                                                    ExprTerm(
                                                                      TermFactor(
                                                                        DesignOfVarFactor(
                                                                          NamedDesignator(
                                                                           eol
                                                                          ) [NamedDesignator]
                                                                        ) [DesignOfVarFactor]
                                                                      ) [TermFactor]
                                                                    ) [ExprTerm]
                                                                  ) [PositiveExpr]
                                                                ) [PrintStatement]
                                                              ) [OneStatement]
                                                            ) [ManyStatements]
                                                          ) [Statements]
                                                        ) [BlockStatement]
                                                        ElseStart(
                                                        ) [ElseStart]
                                                        OneStatement(
                                                          IfStatement(
                                                            IfStart(
                                                            ) [IfStart]
                                                            IfCondition(
                                                              ConditionTerm(
                                                                CondTermFact(
                                                                  InstanceofCondFact(
                                                                    AddressingElem(
                                                                      NamedDesignator(
                                                                       predmeti
                                                                      ) [NamedDesignator]
                                                                      PositiveExpr(
                                                                        ExprTerm(
                                                                          TermFactor(
                                                                            DesignOfVarFactor(
                                                                              NamedDesignator(
                                                                               i
                                                                              ) [NamedDesignator]
                                                                            ) [DesignOfVarFactor]
                                                                          ) [TermFactor]
                                                                        ) [ExprTerm]
                                                                      ) [PositiveExpr]
                                                                    ) [AddressingElem]
                                                                    Type(
                                                                     Kvadar
                                                                    ) [Type]
                                                                  ) [InstanceofCondFact]
                                                                ) [CondTermFact]
                                                              ) [ConditionTerm]
                                                            ) [IfCondition]
                                                            BlockStatement(
                                                              Statements(
                                                                ManyStatements(
                                                                  ManyStatements(
                                                                    ManyStatements(
                                                                      ManyStatements(
                                                                        ManyStatements(
                                                                          ManyStatements(
                                                                            ManyStatements(
                                                                              NoStatement(
                                                                              ) [NoStatement]
                                                                              OneStatement(
                                                                                PrintStatement(
                                                                                  PositiveExpr(
                                                                                    ExprTerm(
                                                                                      TermFactor(
                                                                                        ConstFactor(
                                                                                          CharConst(
                                                                                           k
                                                                                          ) [CharConst]
                                                                                        ) [ConstFactor]
                                                                                      ) [TermFactor]
                                                                                    ) [ExprTerm]
                                                                                  ) [PositiveExpr]
                                                                                ) [PrintStatement]
                                                                              ) [OneStatement]
                                                                            ) [ManyStatements]
                                                                            OneStatement(
                                                                              PrintStatement(
                                                                                PositiveExpr(
                                                                                  ExprTerm(
                                                                                    TermFactor(
                                                                                      ConstFactor(
                                                                                        CharConst(
                                                                                         v
                                                                                        ) [CharConst]
                                                                                      ) [ConstFactor]
                                                                                    ) [TermFactor]
                                                                                  ) [ExprTerm]
                                                                                ) [PositiveExpr]
                                                                              ) [PrintStatement]
                                                                            ) [OneStatement]
                                                                          ) [ManyStatements]
                                                                          OneStatement(
                                                                            PrintStatement(
                                                                              PositiveExpr(
                                                                                ExprTerm(
                                                                                  TermFactor(
                                                                                    ConstFactor(
                                                                                      CharConst(
                                                                                       a
                                                                                      ) [CharConst]
                                                                                    ) [ConstFactor]
                                                                                  ) [TermFactor]
                                                                                ) [ExprTerm]
                                                                              ) [PositiveExpr]
                                                                            ) [PrintStatement]
                                                                          ) [OneStatement]
                                                                        ) [ManyStatements]
                                                                        OneStatement(
                                                                          PrintStatement(
                                                                            PositiveExpr(
                                                                              ExprTerm(
                                                                                TermFactor(
                                                                                  ConstFactor(
                                                                                    CharConst(
                                                                                     d
                                                                                    ) [CharConst]
                                                                                  ) [ConstFactor]
                                                                                ) [TermFactor]
                                                                              ) [ExprTerm]
                                                                            ) [PositiveExpr]
                                                                          ) [PrintStatement]
                                                                        ) [OneStatement]
                                                                      ) [ManyStatements]
                                                                      OneStatement(
                                                                        PrintStatement(
                                                                          PositiveExpr(
                                                                            ExprTerm(
                                                                              TermFactor(
                                                                                ConstFactor(
                                                                                  CharConst(
                                                                                   a
                                                                                  ) [CharConst]
                                                                                ) [ConstFactor]
                                                                              ) [TermFactor]
                                                                            ) [ExprTerm]
                                                                          ) [PositiveExpr]
                                                                        ) [PrintStatement]
                                                                      ) [OneStatement]
                                                                    ) [ManyStatements]
                                                                    OneStatement(
                                                                      PrintStatement(
                                                                        PositiveExpr(
                                                                          ExprTerm(
                                                                            TermFactor(
                                                                              ConstFactor(
                                                                                CharConst(
                                                                                 r
                                                                                ) [CharConst]
                                                                              ) [ConstFactor]
                                                                            ) [TermFactor]
                                                                          ) [ExprTerm]
                                                                        ) [PositiveExpr]
                                                                      ) [PrintStatement]
                                                                    ) [OneStatement]
                                                                  ) [ManyStatements]
                                                                  OneStatement(
                                                                    PrintStatement(
                                                                      PositiveExpr(
                                                                        ExprTerm(
                                                                          TermFactor(
                                                                            DesignOfVarFactor(
                                                                              NamedDesignator(
                                                                               eol
                                                                              ) [NamedDesignator]
                                                                            ) [DesignOfVarFactor]
                                                                          ) [TermFactor]
                                                                        ) [ExprTerm]
                                                                      ) [PositiveExpr]
                                                                    ) [PrintStatement]
                                                                  ) [OneStatement]
                                                                ) [ManyStatements]
                                                              ) [Statements]
                                                            ) [BlockStatement]
                                                          ) [IfStatement]
                                                        ) [OneStatement]
                                                      ) [IfElseStatement]
                                                    ) [OneStatement]
                                                  ) [ManyStatements]
                                                  OneStatement(
                                                    DesignStatement(
                                                      IncStatement(
                                                        NamedDesignator(
                                                         i
                                                        ) [NamedDesignator]
                                                      ) [IncStatement]
                                                    ) [DesignStatement]
                                                  ) [OneStatement]
                                                ) [ManyStatements]
                                              ) [Statements]
                                            ) [BlockStatement]
                                            DoWhileCondStart(
                                            ) [DoWhileCondStart]
                                            ConditionTerm(
                                              CondTermFact(
                                                RelopCondFact(
                                                  PositiveExpr(
                                                    ExprTerm(
                                                      TermFactor(
                                                        DesignOfVarFactor(
                                                          NamedDesignator(
                                                           i
                                                          ) [NamedDesignator]
                                                        ) [DesignOfVarFactor]
                                                      ) [TermFactor]
                                                    ) [ExprTerm]
                                                  ) [PositiveExpr]
                                                  RelopLt(
                                                  ) [RelopLt]
                                                  PositiveExpr(
                                                    ExprTerm(
                                                      TermFactor(
                                                        ConstFactor(
                                                          IntConst(
                                                           6
                                                          ) [IntConst]
                                                        ) [ConstFactor]
                                                      ) [TermFactor]
                                                    ) [ExprTerm]
                                                  ) [PositiveExpr]
                                                ) [RelopCondFact]
                                              ) [CondTermFact]
                                            ) [ConditionTerm]
                                          ) [DoWhileStatement]
                                        ) [OneStatement]
                                      ) [ManyStatements]
                                      OneStatement(
                                        DesignStatement(
                                          DesignAssign(
                                            AssStatement(
                                              NamedDesignator(
                                               zapreminaS
                                              ) [NamedDesignator]
                                              Assignop(
                                              ) [Assignop]
                                              PositiveExpr(
                                                ExprTerm(
                                                  TermFactor(
                                                    ConstFactor(
                                                      IntConst(
                                                       0
                                                      ) [IntConst]
                                                    ) [ConstFactor]
                                                  ) [TermFactor]
                                                ) [ExprTerm]
                                              ) [PositiveExpr]
                                            ) [AssStatement]
                                          ) [DesignAssign]
                                        ) [DesignStatement]
                                      ) [OneStatement]
                                    ) [ManyStatements]
                                    OneStatement(
                                      DesignStatement(
                                        DesignAssign(
                                          AssStatement(
                                            NamedDesignator(
                                             tezinaS
                                            ) [NamedDesignator]
                                            Assignop(
                                            ) [Assignop]
                                            PositiveExpr(
                                              ExprTerm(
                                                TermFactor(
                                                  ConstFactor(
                                                    IntConst(
                                                     0
                                                    ) [IntConst]
                                                  ) [ConstFactor]
                                                ) [TermFactor]
                                              ) [ExprTerm]
                                            ) [PositiveExpr]
                                          ) [AssStatement]
                                        ) [DesignAssign]
                                      ) [DesignStatement]
                                    ) [OneStatement]
                                  ) [ManyStatements]
                                  OneStatement(
                                    DesignStatement(
                                      DesignAssign(
                                        AssStatement(
                                          NamedDesignator(
                                           i
                                          ) [NamedDesignator]
                                          Assignop(
                                          ) [Assignop]
                                          PositiveExpr(
                                            ExprTerm(
                                              TermFactor(
                                                ConstFactor(
                                                  IntConst(
                                                   1
                                                  ) [IntConst]
                                                ) [ConstFactor]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [PositiveExpr]
                                        ) [AssStatement]
                                      ) [DesignAssign]
                                    ) [DesignStatement]
                                  ) [OneStatement]
                                ) [ManyStatements]
                                OneStatement(
                                  DoWhileStatement(
                                    DoWhileLoopStart(
                                    ) [DoWhileLoopStart]
                                    BlockStatement(
                                      Statements(
                                        ManyStatements(
                                          ManyStatements(
                                            ManyStatements(
                                              ManyStatements(
                                                ManyStatements(
                                                  NoStatement(
                                                  ) [NoStatement]
                                                  OneStatement(
                                                    IfStatement(
                                                      IfStart(
                                                      ) [IfStart]
                                                      IfCondition(
                                                        ConditionTerm(
                                                          CondTermFact(
                                                            RelopCondFact(
                                                              PositiveExpr(
                                                                ExprTerm(
                                                                  TermWithMulop(
                                                                    TermFactor(
                                                                      DesignOfVarFactor(
                                                                        NamedDesignator(
                                                                         i
                                                                        ) [NamedDesignator]
                                                                      ) [DesignOfVarFactor]
                                                                    ) [TermFactor]
                                                                    MulopMod(
                                                                    ) [MulopMod]
                                                                    ConstFactor(
                                                                      IntConst(
                                                                       2
                                                                      ) [IntConst]
                                                                    ) [ConstFactor]
                                                                  ) [TermWithMulop]
                                                                ) [ExprTerm]
                                                              ) [PositiveExpr]
                                                              RelopEq(
                                                              ) [RelopEq]
                                                              PositiveExpr(
                                                                ExprTerm(
                                                                  TermFactor(
                                                                    ConstFactor(
                                                                      IntConst(
                                                                       0
                                                                      ) [IntConst]
                                                                    ) [ConstFactor]
                                                                  ) [TermFactor]
                                                                ) [ExprTerm]
                                                              ) [PositiveExpr]
                                                            ) [RelopCondFact]
                                                          ) [CondTermFact]
                                                        ) [ConditionTerm]
                                                      ) [IfCondition]
                                                      BlockStatement(
                                                        Statements(
                                                          ManyStatements(
                                                            ManyStatements(
                                                              NoStatement(
                                                              ) [NoStatement]
                                                              OneStatement(
                                                                DesignStatement(
                                                                  IncStatement(
                                                                    NamedDesignator(
                                                                     i
                                                                    ) [NamedDesignator]
                                                                  ) [IncStatement]
                                                                ) [DesignStatement]
                                                              ) [OneStatement]
                                                            ) [ManyStatements]
                                                            OneStatement(
                                                              ContinueStatement(
                                                              ) [ContinueStatement]
                                                            ) [OneStatement]
                                                          ) [ManyStatements]
                                                        ) [Statements]
                                                      ) [BlockStatement]
                                                    ) [IfStatement]
                                                  ) [OneStatement]
                                                ) [ManyStatements]
                                                OneStatement(
                                                  DesignStatement(
                                                    DesignAssign(
                                                      AssStatement(
                                                        NamedDesignator(
                                                         zapreminaS
                                                        ) [NamedDesignator]
                                                        Assignop(
                                                        ) [Assignop]
                                                        PositiveExpr(
                                                          ExprWithAddop(
                                                            ExprTerm(
                                                              TermFactor(
                                                                DesignOfVarFactor(
                                                                  NamedDesignator(
                                                                   zapreminaS
                                                                  ) [NamedDesignator]
                                                                ) [DesignOfVarFactor]
                                                              ) [TermFactor]
                                                            ) [ExprTerm]
                                                            AddopPlus(
                                                            ) [AddopPlus]
                                                            TermFactor(
                                                              DesignOfMethodFactor(
                                                                AddressingMember(
                                                                  AddressingElem(
                                                                    NamedDesignator(
                                                                     predmeti
                                                                    ) [NamedDesignator]
                                                                    PositiveExpr(
                                                                      ExprWithAddop(
                                                                        ExprTerm(
                                                                          TermFactor(
                                                                            DesignOfVarFactor(
                                                                              NamedDesignator(
                                                                               i
                                                                              ) [NamedDesignator]
                                                                            ) [DesignOfVarFactor]
                                                                          ) [TermFactor]
                                                                        ) [ExprTerm]
                                                                        AddopMinus(
                                                                        ) [AddopMinus]
                                                                        TermFactor(
                                                                          ConstFactor(
                                                                            IntConst(
                                                                             1
                                                                            ) [IntConst]
                                                                          ) [ConstFactor]
                                                                        ) [TermFactor]
                                                                      ) [ExprWithAddop]
                                                                    ) [PositiveExpr]
                                                                  ) [AddressingElem]
                                                                 zapremina
                                                                ) [AddressingMember]
                                                                NoActualParams(
                                                                ) [NoActualParams]
                                                              ) [DesignOfMethodFactor]
                                                            ) [TermFactor]
                                                          ) [ExprWithAddop]
                                                        ) [PositiveExpr]
                                                      ) [AssStatement]
                                                    ) [DesignAssign]
                                                  ) [DesignStatement]
                                                ) [OneStatement]
                                              ) [ManyStatements]
                                              OneStatement(
                                                DesignStatement(
                                                  DesignAssign(
                                                    AssStatement(
                                                      NamedDesignator(
                                                       tezinaS
                                                      ) [NamedDesignator]
                                                      Assignop(
                                                      ) [Assignop]
                                                      PositiveExpr(
                                                        ExprWithAddop(
                                                          ExprTerm(
                                                            TermFactor(
                                                              DesignOfVarFactor(
                                                                NamedDesignator(
                                                                 tezinaS
                                                                ) [NamedDesignator]
                                                              ) [DesignOfVarFactor]
                                                            ) [TermFactor]
                                                          ) [ExprTerm]
                                                          AddopPlus(
                                                          ) [AddopPlus]
                                                          TermFactor(
                                                            DesignOfMethodFactor(
                                                              AddressingMember(
                                                                AddressingElem(
                                                                  NamedDesignator(
                                                                   predmeti
                                                                  ) [NamedDesignator]
                                                                  PositiveExpr(
                                                                    ExprWithAddop(
                                                                      ExprTerm(
                                                                        TermFactor(
                                                                          DesignOfVarFactor(
                                                                            NamedDesignator(
                                                                             i
                                                                            ) [NamedDesignator]
                                                                          ) [DesignOfVarFactor]
                                                                        ) [TermFactor]
                                                                      ) [ExprTerm]
                                                                      AddopMinus(
                                                                      ) [AddopMinus]
                                                                      TermFactor(
                                                                        ConstFactor(
                                                                          IntConst(
                                                                           1
                                                                          ) [IntConst]
                                                                        ) [ConstFactor]
                                                                      ) [TermFactor]
                                                                    ) [ExprWithAddop]
                                                                  ) [PositiveExpr]
                                                                ) [AddressingElem]
                                                               Q
                                                              ) [AddressingMember]
                                                              NoActualParams(
                                                              ) [NoActualParams]
                                                            ) [DesignOfMethodFactor]
                                                          ) [TermFactor]
                                                        ) [ExprWithAddop]
                                                      ) [PositiveExpr]
                                                    ) [AssStatement]
                                                  ) [DesignAssign]
                                                ) [DesignStatement]
                                              ) [OneStatement]
                                            ) [ManyStatements]
                                            OneStatement(
                                              DesignStatement(
                                                MethodCall(
                                                  NamedDesignator(
                                                   ispis
                                                  ) [NamedDesignator]
                                                  HasActualParams(
                                                    SingleActualParam(
                                                      PositiveExpr(
                                                        ExprTerm(
                                                          TermFactor(
                                                            DesignOfVarFactor(
                                                              AddressingElem(
                                                                NamedDesignator(
                                                                 predmeti
                                                                ) [NamedDesignator]
                                                                PositiveExpr(
                                                                  ExprWithAddop(
                                                                    ExprTerm(
                                                                      TermFactor(
                                                                        DesignOfVarFactor(
                                                                          NamedDesignator(
                                                                           i
                                                                          ) [NamedDesignator]
                                                                        ) [DesignOfVarFactor]
                                                                      ) [TermFactor]
                                                                    ) [ExprTerm]
                                                                    AddopMinus(
                                                                    ) [AddopMinus]
                                                                    TermFactor(
                                                                      ConstFactor(
                                                                        IntConst(
                                                                         1
                                                                        ) [IntConst]
                                                                      ) [ConstFactor]
                                                                    ) [TermFactor]
                                                                  ) [ExprWithAddop]
                                                                ) [PositiveExpr]
                                                              ) [AddressingElem]
                                                            ) [DesignOfVarFactor]
                                                          ) [TermFactor]
                                                        ) [ExprTerm]
                                                      ) [PositiveExpr]
                                                    ) [SingleActualParam]
                                                  ) [HasActualParams]
                                                ) [MethodCall]
                                              ) [DesignStatement]
                                            ) [OneStatement]
                                          ) [ManyStatements]
                                          OneStatement(
                                            DesignStatement(
                                              IncStatement(
                                                NamedDesignator(
                                                 i
                                                ) [NamedDesignator]
                                              ) [IncStatement]
                                            ) [DesignStatement]
                                          ) [OneStatement]
                                        ) [ManyStatements]
                                      ) [Statements]
                                    ) [BlockStatement]
                                    DoWhileCondStart(
                                    ) [DoWhileCondStart]
                                    ConditionTerm(
                                      CondTermFact(
                                        RelopCondFact(
                                          PositiveExpr(
                                            ExprTerm(
                                              TermFactor(
                                                DesignOfVarFactor(
                                                  NamedDesignator(
                                                   i
                                                  ) [NamedDesignator]
                                                ) [DesignOfVarFactor]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [PositiveExpr]
                                          RelopLe(
                                          ) [RelopLe]
                                          PositiveExpr(
                                            ExprTerm(
                                              TermFactor(
                                                ConstFactor(
                                                  IntConst(
                                                   6
                                                  ) [IntConst]
                                                ) [ConstFactor]
                                              ) [TermFactor]
                                            ) [ExprTerm]
                                          ) [PositiveExpr]
                                        ) [RelopCondFact]
                                      ) [CondTermFact]
                                    ) [ConditionTerm]
                                  ) [DoWhileStatement]
                                ) [OneStatement]
                              ) [ManyStatements]
                              OneStatement(
                                DesignStatement(
                                  DesignAssign(
                                    AssStatement(
                                      NamedDesignator(
                                       zapreminaK
                                      ) [NamedDesignator]
                                      Assignop(
                                      ) [Assignop]
                                      PositiveExpr(
                                        ExprTerm(
                                          TermFactor(
                                            ConstFactor(
                                              IntConst(
                                               0
                                              ) [IntConst]
                                            ) [ConstFactor]
                                          ) [TermFactor]
                                        ) [ExprTerm]
                                      ) [PositiveExpr]
                                    ) [AssStatement]
                                  ) [DesignAssign]
                                ) [DesignStatement]
                              ) [OneStatement]
                            ) [ManyStatements]
                            OneStatement(
                              DesignStatement(
                                DesignAssign(
                                  AssStatement(
                                    NamedDesignator(
                                     tezinaK
                                    ) [NamedDesignator]
                                    Assignop(
                                    ) [Assignop]
                                    PositiveExpr(
                                      ExprTerm(
                                        TermFactor(
                                          ConstFactor(
                                            IntConst(
                                             0
                                            ) [IntConst]
                                          ) [ConstFactor]
                                        ) [TermFactor]
                                      ) [ExprTerm]
                                    ) [PositiveExpr]
                                  ) [AssStatement]
                                ) [DesignAssign]
                              ) [DesignStatement]
                            ) [OneStatement]
                          ) [ManyStatements]
                          OneStatement(
                            DesignStatement(
                              DesignAssign(
                                AssStatement(
                                  NamedDesignator(
                                   i
                                  ) [NamedDesignator]
                                  Assignop(
                                  ) [Assignop]
                                  PositiveExpr(
                                    ExprTerm(
                                      TermFactor(
                                        ConstFactor(
                                          IntConst(
                                           1
                                          ) [IntConst]
                                        ) [ConstFactor]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [PositiveExpr]
                                ) [AssStatement]
                              ) [DesignAssign]
                            ) [DesignStatement]
                          ) [OneStatement]
                        ) [ManyStatements]
                        OneStatement(
                          DoWhileStatement(
                            DoWhileLoopStart(
                            ) [DoWhileLoopStart]
                            BlockStatement(
                              Statements(
                                ManyStatements(
                                  ManyStatements(
                                    ManyStatements(
                                      ManyStatements(
                                        ManyStatements(
                                          NoStatement(
                                          ) [NoStatement]
                                          OneStatement(
                                            IfStatement(
                                              IfStart(
                                              ) [IfStart]
                                              IfCondition(
                                                ConditionTerm(
                                                  CondTermFact(
                                                    RelopCondFact(
                                                      PositiveExpr(
                                                        ExprTerm(
                                                          TermWithMulop(
                                                            TermFactor(
                                                              DesignOfVarFactor(
                                                                NamedDesignator(
                                                                 i
                                                                ) [NamedDesignator]
                                                              ) [DesignOfVarFactor]
                                                            ) [TermFactor]
                                                            MulopMod(
                                                            ) [MulopMod]
                                                            ConstFactor(
                                                              IntConst(
                                                               2
                                                              ) [IntConst]
                                                            ) [ConstFactor]
                                                          ) [TermWithMulop]
                                                        ) [ExprTerm]
                                                      ) [PositiveExpr]
                                                      RelopEq(
                                                      ) [RelopEq]
                                                      PositiveExpr(
                                                        ExprTerm(
                                                          TermFactor(
                                                            ConstFactor(
                                                              IntConst(
                                                               1
                                                              ) [IntConst]
                                                            ) [ConstFactor]
                                                          ) [TermFactor]
                                                        ) [ExprTerm]
                                                      ) [PositiveExpr]
                                                    ) [RelopCondFact]
                                                  ) [CondTermFact]
                                                ) [ConditionTerm]
                                              ) [IfCondition]
                                              BlockStatement(
                                                Statements(
                                                  ManyStatements(
                                                    ManyStatements(
                                                      NoStatement(
                                                      ) [NoStatement]
                                                      OneStatement(
                                                        DesignStatement(
                                                          IncStatement(
                                                            NamedDesignator(
                                                             i
                                                            ) [NamedDesignator]
                                                          ) [IncStatement]
                                                        ) [DesignStatement]
                                                      ) [OneStatement]
                                                    ) [ManyStatements]
                                                    OneStatement(
                                                      ContinueStatement(
                                                      ) [ContinueStatement]
                                                    ) [OneStatement]
                                                  ) [ManyStatements]
                                                ) [Statements]
                                              ) [BlockStatement]
                                            ) [IfStatement]
                                          ) [OneStatement]
                                        ) [ManyStatements]
                                        OneStatement(
                                          DesignStatement(
                                            DesignAssign(
                                              AssStatement(
                                                NamedDesignator(
                                                 zapreminaS
                                                ) [NamedDesignator]
                                                Assignop(
                                                ) [Assignop]
                                                PositiveExpr(
                                                  ExprWithAddop(
                                                    ExprTerm(
                                                      TermFactor(
                                                        DesignOfVarFactor(
                                                          NamedDesignator(
                                                           zapreminaS
                                                          ) [NamedDesignator]
                                                        ) [DesignOfVarFactor]
                                                      ) [TermFactor]
                                                    ) [ExprTerm]
                                                    AddopPlus(
                                                    ) [AddopPlus]
                                                    TermFactor(
                                                      DesignOfMethodFactor(
                                                        AddressingMember(
                                                          AddressingElem(
                                                            NamedDesignator(
                                                             predmeti
                                                            ) [NamedDesignator]
                                                            PositiveExpr(
                                                              ExprWithAddop(
                                                                ExprTerm(
                                                                  TermFactor(
                                                                    DesignOfVarFactor(
                                                                      NamedDesignator(
                                                                       i
                                                                      ) [NamedDesignator]
                                                                    ) [DesignOfVarFactor]
                                                                  ) [TermFactor]
                                                                ) [ExprTerm]
                                                                AddopMinus(
                                                                ) [AddopMinus]
                                                                TermFactor(
                                                                  ConstFactor(
                                                                    IntConst(
                                                                     1
                                                                    ) [IntConst]
                                                                  ) [ConstFactor]
                                                                ) [TermFactor]
                                                              ) [ExprWithAddop]
                                                            ) [PositiveExpr]
                                                          ) [AddressingElem]
                                                         zapremina
                                                        ) [AddressingMember]
                                                        NoActualParams(
                                                        ) [NoActualParams]
                                                      ) [DesignOfMethodFactor]
                                                    ) [TermFactor]
                                                  ) [ExprWithAddop]
                                                ) [PositiveExpr]
                                              ) [AssStatement]
                                            ) [DesignAssign]
                                          ) [DesignStatement]
                                        ) [OneStatement]
                                      ) [ManyStatements]
                                      OneStatement(
                                        DesignStatement(
                                          DesignAssign(
                                            AssStatement(
                                              NamedDesignator(
                                               tezinaS
                                              ) [NamedDesignator]
                                              Assignop(
                                              ) [Assignop]
                                              PositiveExpr(
                                                ExprWithAddop(
                                                  ExprTerm(
                                                    TermFactor(
                                                      DesignOfVarFactor(
                                                        NamedDesignator(
                                                         tezinaS
                                                        ) [NamedDesignator]
                                                      ) [DesignOfVarFactor]
                                                    ) [TermFactor]
                                                  ) [ExprTerm]
                                                  AddopPlus(
                                                  ) [AddopPlus]
                                                  TermFactor(
                                                    DesignOfMethodFactor(
                                                      AddressingMember(
                                                        AddressingElem(
                                                          NamedDesignator(
                                                           predmeti
                                                          ) [NamedDesignator]
                                                          PositiveExpr(
                                                            ExprWithAddop(
                                                              ExprTerm(
                                                                TermFactor(
                                                                  DesignOfVarFactor(
                                                                    NamedDesignator(
                                                                     i
                                                                    ) [NamedDesignator]
                                                                  ) [DesignOfVarFactor]
                                                                ) [TermFactor]
                                                              ) [ExprTerm]
                                                              AddopMinus(
                                                              ) [AddopMinus]
                                                              TermFactor(
                                                                ConstFactor(
                                                                  IntConst(
                                                                   1
                                                                  ) [IntConst]
                                                                ) [ConstFactor]
                                                              ) [TermFactor]
                                                            ) [ExprWithAddop]
                                                          ) [PositiveExpr]
                                                        ) [AddressingElem]
                                                       Q
                                                      ) [AddressingMember]
                                                      NoActualParams(
                                                      ) [NoActualParams]
                                                    ) [DesignOfMethodFactor]
                                                  ) [TermFactor]
                                                ) [ExprWithAddop]
                                              ) [PositiveExpr]
                                            ) [AssStatement]
                                          ) [DesignAssign]
                                        ) [DesignStatement]
                                      ) [OneStatement]
                                    ) [ManyStatements]
                                    OneStatement(
                                      DesignStatement(
                                        MethodCall(
                                          NamedDesignator(
                                           ispis
                                          ) [NamedDesignator]
                                          HasActualParams(
                                            SingleActualParam(
                                              PositiveExpr(
                                                ExprTerm(
                                                  TermFactor(
                                                    DesignOfVarFactor(
                                                      AddressingElem(
                                                        NamedDesignator(
                                                         predmeti
                                                        ) [NamedDesignator]
                                                        PositiveExpr(
                                                          ExprWithAddop(
                                                            ExprTerm(
                                                              TermFactor(
                                                                DesignOfVarFactor(
                                                                  NamedDesignator(
                                                                   i
                                                                  ) [NamedDesignator]
                                                                ) [DesignOfVarFactor]
                                                              ) [TermFactor]
                                                            ) [ExprTerm]
                                                            AddopMinus(
                                                            ) [AddopMinus]
                                                            TermFactor(
                                                              ConstFactor(
                                                                IntConst(
                                                                 1
                                                                ) [IntConst]
                                                              ) [ConstFactor]
                                                            ) [TermFactor]
                                                          ) [ExprWithAddop]
                                                        ) [PositiveExpr]
                                                      ) [AddressingElem]
                                                    ) [DesignOfVarFactor]
                                                  ) [TermFactor]
                                                ) [ExprTerm]
                                              ) [PositiveExpr]
                                            ) [SingleActualParam]
                                          ) [HasActualParams]
                                        ) [MethodCall]
                                      ) [DesignStatement]
                                    ) [OneStatement]
                                  ) [ManyStatements]
                                  OneStatement(
                                    DesignStatement(
                                      IncStatement(
                                        NamedDesignator(
                                         i
                                        ) [NamedDesignator]
                                      ) [IncStatement]
                                    ) [DesignStatement]
                                  ) [OneStatement]
                                ) [ManyStatements]
                              ) [Statements]
                            ) [BlockStatement]
                            DoWhileCondStart(
                            ) [DoWhileCondStart]
                            ConditionTerm(
                              CondTermFact(
                                RelopCondFact(
                                  PositiveExpr(
                                    ExprTerm(
                                      TermFactor(
                                        DesignOfVarFactor(
                                          NamedDesignator(
                                           i
                                          ) [NamedDesignator]
                                        ) [DesignOfVarFactor]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [PositiveExpr]
                                  RelopLe(
                                  ) [RelopLe]
                                  PositiveExpr(
                                    ExprTerm(
                                      TermFactor(
                                        ConstFactor(
                                          IntConst(
                                           6
                                          ) [IntConst]
                                        ) [ConstFactor]
                                      ) [TermFactor]
                                    ) [ExprTerm]
                                  ) [PositiveExpr]
                                ) [RelopCondFact]
                              ) [CondTermFact]
                            ) [ConditionTerm]
                          ) [DoWhileStatement]
                        ) [OneStatement]
                      ) [ManyStatements]
                      OneStatement(
                        PrintStatement(
                          PositiveExpr(
                            ExprTerm(
                              TermFactor(
                                DesignOfVarFactor(
                                  NamedDesignator(
                                   zapreminaS
                                  ) [NamedDesignator]
                                ) [DesignOfVarFactor]
                              ) [TermFactor]
                            ) [ExprTerm]
                          ) [PositiveExpr]
                        ) [PrintStatement]
                      ) [OneStatement]
                    ) [ManyStatements]
                    OneStatement(
                      PrintStatement(
                        PositiveExpr(
                          ExprTerm(
                            TermFactor(
                              DesignOfVarFactor(
                                NamedDesignator(
                                 eol
                                ) [NamedDesignator]
                              ) [DesignOfVarFactor]
                            ) [TermFactor]
                          ) [ExprTerm]
                        ) [PositiveExpr]
                      ) [PrintStatement]
                    ) [OneStatement]
                  ) [ManyStatements]
                  OneStatement(
                    PrintStatement(
                      PositiveExpr(
                        ExprTerm(
                          TermFactor(
                            DesignOfVarFactor(
                              NamedDesignator(
                               zapreminaK
                              ) [NamedDesignator]
                            ) [DesignOfVarFactor]
                          ) [TermFactor]
                        ) [ExprTerm]
                      ) [PositiveExpr]
                    ) [PrintStatement]
                  ) [OneStatement]
                ) [ManyStatements]
                OneStatement(
                  PrintStatement(
                    PositiveExpr(
                      ExprTerm(
                        TermFactor(
                          DesignOfVarFactor(
                            NamedDesignator(
                             eol
                            ) [NamedDesignator]
                          ) [DesignOfVarFactor]
                        ) [TermFactor]
                      ) [ExprTerm]
                    ) [PositiveExpr]
                  ) [PrintStatement]
                ) [OneStatement]
              ) [ManyStatements]
              OneStatement(
                PrintStatement(
                  PositiveExpr(
                    ExprTerm(
                      TermFactor(
                        DesignOfVarFactor(
                          NamedDesignator(
                           tezinaS
                          ) [NamedDesignator]
                        ) [DesignOfVarFactor]
                      ) [TermFactor]
                    ) [ExprTerm]
                  ) [PositiveExpr]
                ) [PrintStatement]
              ) [OneStatement]
            ) [ManyStatements]
            OneStatement(
              PrintStatement(
                PositiveExpr(
                  ExprTerm(
                    TermFactor(
                      DesignOfVarFactor(
                        NamedDesignator(
                         eol
                        ) [NamedDesignator]
                      ) [DesignOfVarFactor]
                    ) [TermFactor]
                  ) [ExprTerm]
                ) [PositiveExpr]
              ) [PrintStatement]
            ) [OneStatement]
          ) [ManyStatements]
          OneStatement(
            PrintStatement(
              PositiveExpr(
                ExprTerm(
                  TermFactor(
                    DesignOfVarFactor(
                      NamedDesignator(
                       tezinaK
                      ) [NamedDesignator]
                    ) [DesignOfVarFactor]
                  ) [TermFactor]
                ) [ExprTerm]
              ) [PositiveExpr]
            ) [PrintStatement]
          ) [OneStatement]
        ) [ManyStatements]
        OneStatement(
          PrintStatement(
            PositiveExpr(
              ExprTerm(
                TermFactor(
                  DesignOfVarFactor(
                    NamedDesignator(
                     eol
                    ) [NamedDesignator]
                  ) [DesignOfVarFactor]
                ) [TermFactor]
              ) [ExprTerm]
            ) [PositiveExpr]
          ) [PrintStatement]
        ) [OneStatement]
      ) [ManyStatements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:33:51,966 - ===================================
INFO  17:33:51,966 - Semanticka analiza:
INFO  17:33:52,034 - Detektovan pristup polju klase na liniji 15
INFO  17:33:52,034 - 	Fld koefTezine: int, 2, 1 
INFO  17:33:52,035 - Detektovan pristup formalnom parametru metode
INFO  17:33:52,035 - 	Var this: , 0, 1 
INFO  17:33:52,035 - Detektovan pristup polju klase na liniji 17
INFO  17:33:52,035 - 	Fld tezina: int, 1, 1 
INFO  17:33:52,035 - Detektovan pristup formalnom parametru metode na liniji 17
INFO  17:33:52,035 - 	Var tezina: int, 1, 1 
INFO  17:33:52,035 - Detektovan pristup polju klase na liniji 17
INFO  17:33:52,035 - 	Fld koefTezine: int, 2, 1 
INFO  17:33:52,035 - Detektovan pristup polju klase na liniji 18
INFO  17:33:52,035 - 	Fld tezina: int, 1, 1 
INFO  17:33:52,035 - Detektovan pristup metodi klase na liniji 20
INFO  17:33:52,035 - 	Meth zapremina: int, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,035 - Detektovan pristup polju klase na liniji 20
INFO  17:33:52,035 - 	Fld tezina: int, 1, 1 
INFO  17:33:52,035 - Detektovan pristup formalnom parametru metode
INFO  17:33:52,035 - 	Var this: , 0, 1 
INFO  17:33:52,035 - Detektovan pristup polju klase na liniji 21
INFO  17:33:52,035 - 	Fld vrsta: char, 3, 1 
INFO  17:33:52,035 - Detektovan pristup formalnom parametru metode na liniji 21
INFO  17:33:52,035 - 	Var vrsta: char, 1, 1 
INFO  17:33:52,035 - Detektovan pristup polju klase na liniji 22
INFO  17:33:52,035 - 	Fld vrsta: char, 3, 1 
INFO  17:33:52,035 - Detektovan pristup polju klase na liniji 23
INFO  17:33:52,035 - 	Fld tezina: int, 1, 1 
INFO  17:33:52,036 - Detektovan pristup polju klase na liniji 25
INFO  17:33:52,036 - 	Fld vrsta: char, 3, 1 
INFO  17:33:52,036 - Detektovan pristup metodi klase na liniji 26
INFO  17:33:52,036 - 	Meth Q: int, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,036 - Detektovan pristup konstruktoru nadklase preko super na liniji 9
INFO  17:33:52,036 - 	Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,036 - Detektovan pristup polju klase na liniji 37
INFO  17:33:52,036 - 	Fld vrsta: char, 3, 1 
INFO  17:33:52,036 - Detektovan pristup formalnom parametru metode
INFO  17:33:52,036 - 	Var this: , 0, 1 
INFO  17:33:52,036 - Detektovan pristup polju klase na liniji 40
INFO  17:33:52,036 - 	Fld r: int, 4, 1 
INFO  17:33:52,036 - Detektovan pristup formalnom parametru metode na liniji 40
INFO  17:33:52,036 - 	Var r: int, 1, 1 
INFO  17:33:52,036 - Detektovan pristup lokalnoj promenljivoj na liniji 45
INFO  17:33:52,036 - 	Var z: int, 1, 1 
INFO  17:33:52,036 - Detektovan pristup lokalnoj promenljivoj na liniji 46
INFO  17:33:52,036 - 	Var z: int, 1, 1 
INFO  17:33:52,036 - Detektovan pristup polju klase na liniji 46
INFO  17:33:52,037 - 	Fld r: int, 4, 1 
INFO  17:33:52,037 - Detektovan pristup polju klase na liniji 51
INFO  17:33:52,037 - 	Fld r: int, 4, 1 
INFO  17:33:52,037 - Detektovan pristup konstruktoru nadklase preko super na liniji 9
INFO  17:33:52,037 - 	Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,037 - Detektovan pristup polju klase na liniji 63
INFO  17:33:52,037 - 	Fld vrsta: char, 3, 1 
INFO  17:33:52,037 - Detektovan pristup formalnom parametru metode
INFO  17:33:52,037 - 	Var this: , 0, 1 
INFO  17:33:52,037 - Detektovan pristup polju klase na liniji 66
INFO  17:33:52,037 - 	Fld a: int, 4, 1 
INFO  17:33:52,037 - Detektovan pristup formalnom parametru metode na liniji 66
INFO  17:33:52,037 - 	Var a: int, 1, 1 
INFO  17:33:52,038 - Detektovan pristup formalnom parametru metode
INFO  17:33:52,038 - 	Var this: , 0, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 66
INFO  17:33:52,038 - 	Fld b: int, 5, 1 
INFO  17:33:52,038 - Detektovan pristup formalnom parametru metode na liniji 66
INFO  17:33:52,038 - 	Var b: int, 2, 1 
INFO  17:33:52,038 - Detektovan pristup formalnom parametru metode
INFO  17:33:52,038 - 	Var this: , 0, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 66
INFO  17:33:52,038 - 	Fld c: int, 6, 1 
INFO  17:33:52,038 - Detektovan pristup formalnom parametru metode na liniji 66
INFO  17:33:52,038 - 	Var c: int, 3, 1 
INFO  17:33:52,038 - Detektovan pristup lokalnoj promenljivoj na liniji 70
INFO  17:33:52,038 - 	Var z: int, 1, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 70
INFO  17:33:52,038 - 	Fld a: int, 4, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 70
INFO  17:33:52,038 - 	Fld b: int, 5, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 70
INFO  17:33:52,038 - 	Fld c: int, 6, 1 
INFO  17:33:52,038 - Detektovan pristup lokalnoj promenljivoj na liniji 71
INFO  17:33:52,038 - 	Var z: int, 1, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 75
INFO  17:33:52,038 - 	Fld a: int, 4, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 76
INFO  17:33:52,038 - 	Fld b: int, 5, 1 
INFO  17:33:52,038 - Detektovan pristup polju klase na liniji 77
INFO  17:33:52,038 - 	Fld c: int, 6, 1 
INFO  17:33:52,038 - Detektovan pristup formalnom parametru metode na liniji 89
INFO  17:33:52,038 - 	Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
], 0, 1 
INFO  17:33:52,038 - Detektovan pristup metodi klase na liniji 89
INFO  17:33:52,038 - 	Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,039 - Detektovan pristup formalnom parametru metode na liniji 91
INFO  17:33:52,039 - 	Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
], 0, 1 
INFO  17:33:52,039 - Detektovan pristup metodi klase na liniji 91
INFO  17:33:52,039 - 	Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,039 - Detektovan pristup lokalnoj promenljivoj na liniji 96
INFO  17:33:52,039 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,039 - Detektovan pristup lokalnoj promenljivoj na liniji 97
INFO  17:33:52,039 - 	Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 2, 1 
INFO  17:33:52,039 - Detektovano kreiranje objekta klase na liniji 97
INFO  17:33:52,039 - 	Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 0, 0 
INFO  17:33:52,040 - Detektovan pristup lokalnoj promenljivoj na liniji 98
INFO  17:33:52,040 - 	Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 3, 1 
INFO  17:33:52,040 - Detektovano kreiranje objekta klase na liniji 98
INFO  17:33:52,040 - 	Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 0, 0 
INFO  17:33:52,040 - Detektovan pristup lokalnoj promenljivoj na liniji 99
INFO  17:33:52,040 - 	Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 4, 1 
INFO  17:33:52,040 - Detektovano kreiranje objekta klase na liniji 99
INFO  17:33:52,040 - 	Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 0, 0 
INFO  17:33:52,040 - Detektovan pristup lokalnoj promenljivoj na liniji 101
INFO  17:33:52,040 - 	Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 5, 1 
INFO  17:33:52,040 - Detektovano kreiranje objekta klase na liniji 101
INFO  17:33:52,041 - 	Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 0, 0 
INFO  17:33:52,041 - Detektovan pristup lokalnoj promenljivoj na liniji 102
INFO  17:33:52,041 - 	Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 6, 1 
INFO  17:33:52,041 - Detektovano kreiranje objekta klase na liniji 102
INFO  17:33:52,041 - 	Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 0, 0 
INFO  17:33:52,041 - Detektovan pristup lokalnoj promenljivoj na liniji 103
INFO  17:33:52,041 - 	Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 7, 1 
INFO  17:33:52,041 - Detektovano kreiranje objekta klase na liniji 103
INFO  17:33:52,041 - 	Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 0, 0 
INFO  17:33:52,041 - Detektovan pristup lokalnoj promenljivoj na liniji 105
INFO  17:33:52,042 - 	Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 2, 1 
INFO  17:33:52,042 - Detektovan pristup metodi klase na liniji 105
INFO  17:33:52,042 - 	Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 

INFO  17:33:52,042 - Detektovan pristup lokalnoj promenljivoj na liniji 106
INFO  17:33:52,042 - 	Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 3, 1 
INFO  17:33:52,042 - Detektovan pristup metodi klase na liniji 106
INFO  17:33:52,042 - 	Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 

INFO  17:33:52,042 - Detektovan pristup lokalnoj promenljivoj na liniji 107
INFO  17:33:52,042 - 	Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 4, 1 
INFO  17:33:52,042 - Detektovan pristup metodi klase na liniji 107
INFO  17:33:52,043 - 	Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 

INFO  17:33:52,043 - Detektovan pristup lokalnoj promenljivoj na liniji 110
INFO  17:33:52,043 - 	Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 5, 1 
INFO  17:33:52,043 - Detektovan pristup metodi klase na liniji 110
INFO  17:33:52,043 - 	Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 

INFO  17:33:52,043 - Detektovan pristup lokalnoj promenljivoj na liniji 111
INFO  17:33:52,043 - 	Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 6, 1 
INFO  17:33:52,043 - Detektovan pristup metodi klase na liniji 111
INFO  17:33:52,043 - 	Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 

INFO  17:33:52,043 - Detektovan pristup lokalnoj promenljivoj na liniji 112
INFO  17:33:52,043 - 	Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 7, 1 
INFO  17:33:52,043 - Detektovan pristup metodi klase na liniji 112
INFO  17:33:52,043 - 	Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 

INFO  17:33:52,043 - Detektovan pristup lokalnoj promenljivoj na liniji 114
INFO  17:33:52,043 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,044 - Detektovan pristup elementu niza na liniji 114
INFO  17:33:52,044 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,044 - Detektovan pristup lokalnoj promenljivoj na liniji 114
INFO  17:33:52,044 - 	Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 2, 1 
INFO  17:33:52,044 - Detektovan pristup lokalnoj promenljivoj na liniji 115
INFO  17:33:52,044 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,044 - Detektovan pristup elementu niza na liniji 115
INFO  17:33:52,044 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,044 - Detektovan pristup lokalnoj promenljivoj na liniji 115
INFO  17:33:52,044 - 	Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 3, 1 
INFO  17:33:52,044 - Detektovan pristup lokalnoj promenljivoj na liniji 116
INFO  17:33:52,044 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,044 - Detektovan pristup elementu niza na liniji 116
INFO  17:33:52,044 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,044 - Detektovan pristup lokalnoj promenljivoj na liniji 116
INFO  17:33:52,044 - 	Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 4, 1 
INFO  17:33:52,044 - Detektovan pristup lokalnoj promenljivoj na liniji 117
INFO  17:33:52,044 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,044 - Detektovan pristup elementu niza na liniji 117
INFO  17:33:52,045 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 117
INFO  17:33:52,045 - 	Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 5, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 118
INFO  17:33:52,045 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,045 - Detektovan pristup elementu niza na liniji 118
INFO  17:33:52,045 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 118
INFO  17:33:52,045 - 	Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 6, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 119
INFO  17:33:52,045 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,045 - Detektovan pristup elementu niza na liniji 119
INFO  17:33:52,045 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 119
INFO  17:33:52,045 - 	Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 7, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 121
INFO  17:33:52,045 - 	Var t: int, 8, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 122
INFO  17:33:52,045 - 	Var i: int, 1, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 124
INFO  17:33:52,045 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 124
INFO  17:33:52,045 - 	Var i: int, 1, 1 
INFO  17:33:52,045 - Detektovan pristup elementu niza na liniji 124
INFO  17:33:52,045 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 124
INFO  17:33:52,045 - 	Var t: int, 8, 1 
INFO  17:33:52,045 - Detektovan pristup metodi klase na liniji 124
INFO  17:33:52,045 - 	Meth postaviTezinu: notype, 0, 1 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 

INFO  17:33:52,045 - Detektovan pristup lokalnoj promenljivoj na liniji 125
INFO  17:33:52,046 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 125
INFO  17:33:52,046 - 	Var i: int, 1, 1 
INFO  17:33:52,046 - Detektovan pristup elementu niza na liniji 125
INFO  17:33:52,046 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 132
INFO  17:33:52,046 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 132
INFO  17:33:52,046 - 	Var i: int, 1, 1 
INFO  17:33:52,046 - Detektovan pristup elementu niza na liniji 132
INFO  17:33:52,046 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 141
INFO  17:33:52,046 - 	Var i: int, 1, 1 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 142
INFO  17:33:52,046 - 	Var i: int, 1, 1 
INFO  17:33:52,046 - Detektovan pristup globalnoj promenljivoj na liniji 144
INFO  17:33:52,046 - 	Var zapreminaS: int, 1, 0 
INFO  17:33:52,046 - Detektovan pristup globalnoj promenljivoj na liniji 145
INFO  17:33:52,046 - 	Var tezinaS: int, 3, 0 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 146
INFO  17:33:52,046 - 	Var i: int, 1, 1 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 148
INFO  17:33:52,046 - 	Var i: int, 1, 1 
INFO  17:33:52,046 - Detektovan pristup lokalnoj promenljivoj na liniji 149
INFO  17:33:52,046 - 	Var i: int, 1, 1 
INFO  17:33:52,046 - Detektovan pristup globalnoj promenljivoj na liniji 152
INFO  17:33:52,047 - 	Var zapreminaS: int, 1, 0 
INFO  17:33:52,047 - Detektovan pristup globalnoj promenljivoj na liniji 152
INFO  17:33:52,047 - 	Var zapreminaS: int, 1, 0 
INFO  17:33:52,047 - Detektovan pristup lokalnoj promenljivoj na liniji 152
INFO  17:33:52,047 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,047 - Detektovan pristup lokalnoj promenljivoj na liniji 152
INFO  17:33:52,047 - 	Var i: int, 1, 1 
INFO  17:33:52,047 - Detektovan pristup elementu niza na liniji 152
INFO  17:33:52,047 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,047 - Detektovan pristup metodi klase na liniji 152
INFO  17:33:52,047 - 	Meth zapremina: int, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,047 - Detektovan pristup globalnoj promenljivoj na liniji 153
INFO  17:33:52,047 - 	Var tezinaS: int, 3, 0 
INFO  17:33:52,047 - Detektovan pristup globalnoj promenljivoj na liniji 153
INFO  17:33:52,047 - 	Var tezinaS: int, 3, 0 
INFO  17:33:52,047 - Detektovan pristup lokalnoj promenljivoj na liniji 153
INFO  17:33:52,047 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,047 - Detektovan pristup lokalnoj promenljivoj na liniji 153
INFO  17:33:52,047 - 	Var i: int, 1, 1 
INFO  17:33:52,047 - Detektovan pristup elementu niza na liniji 153
INFO  17:33:52,047 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,047 - Detektovan pristup metodi klase na liniji 153
INFO  17:33:52,047 - 	Meth Q: int, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,047 - Detektovan pristup lokalnoj promenljivoj na liniji 154
INFO  17:33:52,047 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,047 - Detektovan pristup lokalnoj promenljivoj na liniji 154
INFO  17:33:52,047 - 	Var i: int, 1, 1 
INFO  17:33:52,047 - Detektovan pristup elementu niza na liniji 154
INFO  17:33:52,047 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,047 - Detektovan pristup globalnoj metodi na liniji 154
INFO  17:33:52,047 - 	Meth ispis: notype, 0, 0 
   Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
], 0, 1 

INFO  17:33:52,047 - Detektovan pristup lokalnoj promenljivoj na liniji 155
INFO  17:33:52,048 - 	Var i: int, 1, 1 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 156
INFO  17:33:52,048 - 	Var i: int, 1, 1 
INFO  17:33:52,048 - Detektovan pristup globalnoj promenljivoj na liniji 159
INFO  17:33:52,048 - 	Var zapreminaK: int, 0, 0 
INFO  17:33:52,048 - Detektovan pristup globalnoj promenljivoj na liniji 160
INFO  17:33:52,048 - 	Var tezinaK: int, 2, 0 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 161
INFO  17:33:52,048 - 	Var i: int, 1, 1 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 163
INFO  17:33:52,048 - 	Var i: int, 1, 1 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 164
INFO  17:33:52,048 - 	Var i: int, 1, 1 
INFO  17:33:52,048 - Detektovan pristup globalnoj promenljivoj na liniji 167
INFO  17:33:52,048 - 	Var zapreminaS: int, 1, 0 
INFO  17:33:52,048 - Detektovan pristup globalnoj promenljivoj na liniji 167
INFO  17:33:52,048 - 	Var zapreminaS: int, 1, 0 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 167
INFO  17:33:52,048 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 167
INFO  17:33:52,048 - 	Var i: int, 1, 1 
INFO  17:33:52,048 - Detektovan pristup elementu niza na liniji 167
INFO  17:33:52,048 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,048 - Detektovan pristup metodi klase na liniji 167
INFO  17:33:52,048 - 	Meth zapremina: int, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,048 - Detektovan pristup globalnoj promenljivoj na liniji 168
INFO  17:33:52,048 - 	Var tezinaS: int, 3, 0 
INFO  17:33:52,048 - Detektovan pristup globalnoj promenljivoj na liniji 168
INFO  17:33:52,048 - 	Var tezinaS: int, 3, 0 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 168
INFO  17:33:52,048 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,048 - Detektovan pristup lokalnoj promenljivoj na liniji 168
INFO  17:33:52,048 - 	Var i: int, 1, 1 
INFO  17:33:52,048 - Detektovan pristup elementu niza na liniji 168
INFO  17:33:52,048 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,049 - Detektovan pristup metodi klase na liniji 168
INFO  17:33:52,049 - 	Meth Q: int, 0, 1 
   Var this: , 0, 1 

INFO  17:33:52,049 - Detektovan pristup lokalnoj promenljivoj na liniji 169
INFO  17:33:52,049 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,049 - Detektovan pristup lokalnoj promenljivoj na liniji 169
INFO  17:33:52,049 - 	Var i: int, 1, 1 
INFO  17:33:52,049 - Detektovan pristup elementu niza na liniji 169
INFO  17:33:52,049 - 	Var predmeti: Arr of Class, 0, 1 
INFO  17:33:52,049 - Detektovan pristup globalnoj metodi na liniji 169
INFO  17:33:52,049 - 	Meth ispis: notype, 0, 0 
   Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
], 0, 1 

INFO  17:33:52,049 - Detektovan pristup lokalnoj promenljivoj na liniji 170
INFO  17:33:52,049 - 	Var i: int, 1, 1 
INFO  17:33:52,049 - Detektovan pristup lokalnoj promenljivoj na liniji 171
INFO  17:33:52,049 - 	Var i: int, 1, 1 
INFO  17:33:52,049 - Detektovan pristup globalnoj promenljivoj na liniji 173
INFO  17:33:52,049 - 	Var zapreminaS: int, 1, 0 
INFO  17:33:52,049 - Detektovan pristup globalnoj promenljivoj na liniji 174
INFO  17:33:52,049 - 	Var zapreminaK: int, 0, 0 
INFO  17:33:52,049 - Detektovan pristup globalnoj promenljivoj na liniji 175
INFO  17:33:52,049 - 	Var tezinaS: int, 3, 0 
INFO  17:33:52,049 - Detektovan pristup globalnoj promenljivoj na liniji 176
INFO  17:33:52,049 - 	Var tezinaK: int, 2, 0 
INFO  17:33:52,049 - Semanticka analiza uspesno zavrsena.
INFO  17:33:52,049 - ===================================
INFO  17:33:52,049 - Tabela simbola:
=====================SYMBOL TABLE DUMP=========================
Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: bool, -1, -1 
Prog test_303: notype, 0, 1 
   Con cinilac: int, 4, 0 
   Con delilac: int, 3, 0 
   Type Predmet: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
], 0, 0 
   Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
      Var z: int, 1, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
      Var this: , 0, 1 
      Var r: int, 1, 1 
], 0, 0 
   Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
      Var z: int, 1, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
      Var this: , 0, 1 
      Var a: int, 1, 1 
      Var b: int, 2, 1 
      Var c: int, 3, 1 
], 0, 0 
   Var zapreminaK: int, 0, 0 
   Var zapreminaS: int, 1, 0 
   Var tezinaK: int, 2, 0 
   Var tezinaS: int, 3, 0 
   Meth ispis: notype, 0, 0 
      Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
], 0, 1 

   Meth main: notype, 0, 0 
      Var predmeti: Arr of Class, 0, 1 
      Var i: int, 1, 1 
      Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
         Var this: , 0, 1 
         Var r: int, 1, 1 
], 2, 1 
      Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
         Var this: , 0, 1 
         Var r: int, 1, 1 
], 3, 1 
      Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld r: int, 4, 1 Meth Sfera: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviPoluprecnik: notype, 0, 1 
         Var this: , 0, 1 
         Var r: int, 1, 1 
], 4, 1 
      Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
         Var this: , 0, 1 
         Var a: int, 1, 1 
         Var b: int, 2, 1 
         Var c: int, 3, 1 
], 5, 1 
      Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
         Var this: , 0, 1 
         Var a: int, 1, 1 
         Var b: int, 2, 1 
         Var c: int, 3, 1 
], 6, 1 
      Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth Kvadar: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 1 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 1 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviStranice: notype, 0, 1 
         Var this: , 0, 1 
         Var a: int, 1, 1 
         Var b: int, 2, 1 
         Var c: int, 3, 1 
], 7, 1 
      Var t: int, 8, 1 



INFO  17:33:52,050 - ===================================
INFO  17:33:52,050 - Generisanje koda: D:\Faks\PP1\workspace\MJCompiler\test\program.obj
INFO  17:33:52,231 - Kompajliranje uspesno zavrseno.
